{"nodes": [{"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 1, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d\\n,"], "features": []}, {"string": " while ( t -- )", "links": [], "variables": ["t"], "ids": [], "nodeId": 2, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 3, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": "a;", "links": [], "variables": ["a", "n"], "ids": ["lp"], "nodeId": 4, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " i < n ;", "links": [], "variables": ["n", "i"], "ids": ["lp"], "nodeId": 5, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 6, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 7, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["a", "i"], "ids": ["lp", "lp"], "nodeId": 8, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": "scanf", "links": [], "variables": ["m"], "ids": ["lp"], "nodeId": 9, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": "b;", "links": [], "variables": ["b", "m"], "ids": ["lp"], "nodeId": 10, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " i < m ;", "links": [], "variables": ["m", "i"], "ids": ["lp"], "nodeId": 11, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 12, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 13, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["b", "i"], "ids": ["lp", "lp"], "nodeId": 14, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " n >= m )", "links": [], "variables": ["m", "n"], "ids": ["lp"], "nodeId": 15, "featuresSelf": ["icn"], "operators": [">="], "constants": [], "features": []}, {"string": " i < n ;", "links": [], "variables": ["n", "i"], "ids": ["lp", "if"], "nodeId": 16, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 17, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "if", "lp"], "nodeId": 18, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " a [ i ] == b [ 0 ] )", "links": [], "variables": ["b", "a", "i"], "ids": ["lp", "if", "lp"], "nodeId": 19, "featuresSelf": ["icn"], "operators": ["=="], "constants": ["0"], "features": []}, {"string": " ( j - i ) < m ;", "links": [22, 23], "variables": ["i"], "ids": ["lp", "if", "lp", "if"], "nodeId": 20, "featuresSelf": [], "operators": ["<"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "if", "lp", "if"], "nodeId": 21, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["m"], "ids": ["lp", "if", "lp", "if"], "nodeId": 22, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " j - i )", "links": [], "variables": ["i", "j"], "ids": ["lp", "if", "lp", "if"], "nodeId": 23, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["j"], "ids": ["lp", "if", "lp", "if", "lp"], "nodeId": 24, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " a [ j ] == b [ j - i ] )", "links": [26, 27], "variables": [], "ids": ["lp", "if", "lp", "if", "lp"], "nodeId": 25, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": " j - i ]", "links": [], "variables": ["b", "i", "j"], "ids": ["lp", "if", "lp", "if", "lp"], "nodeId": 26, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["a", "j"], "ids": ["lp", "if", "lp", "if", "lp"], "nodeId": 27, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " count ++ ;", "links": [], "variables": ["count"], "ids": ["lp", "if", "lp", "if", "lp", "if"], "nodeId": 28, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " count = 0 ;", "links": [], "variables": [], "ids": ["lp", "if", "lp", "if", "lp"], "nodeId": 29, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " break ;", "links": [], "variables": [], "ids": ["lp", "if", "lp", "if", "lp"], "nodeId": 30, "featuresSelf": ["break"], "operators": [], "constants": [], "features": []}, {"string": " count == m )", "links": [], "variables": ["m", "count"], "ids": ["lp", "if", "lp", "if"], "nodeId": 31, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp", "if", "lp", "if", "if"], "nodeId": 32, "featuresSelf": ["out"], "operators": [], "constants": ["Yes\\n)"], "features": []}, {"string": " break ;", "links": [], "variables": [], "ids": ["lp", "if", "lp", "if", "if"], "nodeId": 33, "featuresSelf": ["break"], "operators": [], "constants": [], "features": []}, {"string": " count != m )", "links": [], "variables": ["m", "count"], "ids": ["lp", "if"], "nodeId": 34, "featuresSelf": ["icn"], "operators": ["!="], "constants": [], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp", "if", "if"], "nodeId": 35, "featuresSelf": ["out"], "operators": [], "constants": ["No\\n)"], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp"], "nodeId": 36, "featuresSelf": ["out"], "operators": [], "constants": ["No\\n)"], "features": []}, {"string": " return 0 ;", "links": [], "variables": [], "ids": [], "nodeId": 37, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":", ":1;&;%d\\n,", ":1;--;", "lp:1;&;%d,", "lp:0", "lp:2;<;0", "lp:", "lplp:1;++;", "lplp:2;&;%d,", "lp:1;&;%d,", "lp:", "lp:2;<;0", "lp:", "lplp:1;++;", "lplp:2;&;%d,", "lp:2;>=;", "lpif:2;<;0", "lpif:", "lpiflp:1;++;", "lpiflp:3;==;0", "lpiflpif:1;<;", "lpiflpif:", "lpiflpif:", "lpiflpif:2;-;", "lpiflpiflp:1;++;", "lpiflpiflp:0;==;", "lpiflpiflp:3;-;", "lpiflpiflp:", "lpiflpiflpif:1;++;", "lpiflpiflp:0", "lpiflpiflp:", "lpiflpif:2;==;", "lpiflpifif:Yes\\n)", "lpiflpifif:", "lpif:2;!=;", "lpifif:No\\n)", "lp:No\\n)", ":0"], "expr": ["", "1;&;%d\\n,", "1;--;", "1;&;%d,", "0", "2;<;0", "", "1;++;", "2;&;%d,", "1;&;%d,", "", "2;<;0", "", "1;++;", "2;&;%d,", "2;>=;", "2;<;0", "", "1;++;", "3;==;0", "1;<;", "", "", "2;-;", "1;++;", "0;==;", "3;-;", "", "1;++;", "0", "", "2;==;", "Yes\\n)", "", "2;!=;", "No\\n)", "No\\n)", "0"], "basic": ["&", "%d\\n,", "--", "loop", "&", "%d,", "0", "<", "0", "loop", "++", "&", "%d,", "&", "%d,", "<", "0", "loop", "++", "&", "%d,", ">=", "<", "0", "loop", "++", "==", "0", "<", "loop", "-", "++", "==", "-", "++", "0", "==", "Yes\\n)", "!=", "No\\n)", "No\\n)", "0"], "exprDepend": ["2;<;0#2;<;0", "1;++;#2;<;0", "2;&;%d,#2;<;0", "2;<;0#2;<;0", "1;++;#2;<;0", "2;&;%d,#2;<;0", "2;<;0#2;<;0", "1;++;#2;<;0", "2;&;%d,#2;<;0", "1;++;#0"], "controlContextBC": [":&", ":%d\\n,", ":--", "lp:&", "lp:%d,", "lp:0", "lp:<", "lp:0", "lplp:++", "lplp:&", "lplp:%d,", "lp:&", "lp:%d,", "lp:<", "lp:0", "lplp:++", "lplp:&", "lplp:%d,", "lp:>=", "lpif:<", "lpif:0", "lpiflp:++", "lpiflp:==", "lpiflp:0", "lpiflpif:<", "lpiflpif:-", "lpiflpiflp:++", "lpiflpiflp:==", "lpiflpiflp:-", "lpiflpiflpif:++", "lpiflpiflp:0", "lpiflpif:==", "lpiflpifif:Yes\\n)", "lpif:!=", "lpifif:No\\n)", "lp:No\\n)", ":0"]}]}