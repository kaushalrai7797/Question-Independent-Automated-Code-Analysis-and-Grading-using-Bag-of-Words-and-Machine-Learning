{"nodes": [{"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 1, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " while ( t -- )", "links": [], "variables": ["t"], "ids": [], "nodeId": 2, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 3, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": "a;", "links": [], "variables": ["a", "n"], "ids": ["lp"], "nodeId": 4, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " i < n ;", "links": [], "variables": ["n", "i"], "ids": ["lp"], "nodeId": 5, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 6, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 7, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["a", "i"], "ids": ["lp", "lp"], "nodeId": 8, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": "scanf", "links": [], "variables": ["f"], "ids": ["lp"], "nodeId": 9, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": "b;", "links": [], "variables": ["b", "f"], "ids": ["lp"], "nodeId": 10, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " j < f ;", "links": [], "variables": ["f", "j"], "ids": ["lp"], "nodeId": 11, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 12, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["j"], "ids": ["lp", "lp"], "nodeId": 13, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["b", "j"], "ids": ["lp", "lp"], "nodeId": 14, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " j = 0 ;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 15, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " i < n ;", "links": [], "variables": ["n", "i"], "ids": ["lp"], "nodeId": 16, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 17, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 18, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " a [ i ] == b [ j ] )", "links": [], "variables": ["b", "j", "a", "i"], "ids": ["lp", "lp"], "nodeId": 19, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": " j ++ ;", "links": [], "variables": ["j"], "ids": ["lp", "lp", "if"], "nodeId": 20, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " j == f )", "links": [], "variables": ["f", "j"], "ids": ["lp"], "nodeId": 21, "featuresSelf": ["icn", "out", "out"], "operators": ["=="], "constants": ["Yes\\n)", "No\\n)"], "features": []}, {"string": " return 0 ;", "links": [], "variables": [], "ids": [], "nodeId": 22, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":0", ":1;&;%d,", ":1;--;", "lp:1;&;%d,", "lp:", "lp:2;<;0", "lp:", "lplp:1;++;", "lplp:2;&;%d,", "lp:1;&;%d,", "lp:", "lp:2;<;0", "lp:", "lplp:1;++;", "lplp:2;&;%d,", "lp:0", "lp:2;<;0", "lp:", "lplp:1;++;", "lplp:4;==;", "lplpif:1;++;", "lp:2;==;Yes\\n)No\\n)", ":0"], "expr": ["0", "1;&;%d,", "1;--;", "1;&;%d,", "", "2;<;0", "", "1;++;", "2;&;%d,", "1;&;%d,", "", "2;<;0", "", "1;++;", "2;&;%d,", "0", "2;<;0", "", "1;++;", "4;==;", "1;++;", "2;==;Yes\\n)No\\n)", "0"], "basic": ["0", "&", "%d,", "--", "loop", "&", "%d,", "<", "0", "loop", "++", "&", "%d,", "&", "%d,", "<", "0", "loop", "++", "&", "%d,", "0", "<", "0", "loop", "++", "==", "++", "==", "Yes\\n)", "No\\n)", "0"], "exprDepend": ["2;<;0#0", "1;++;#0", "2;&;%d,#0", "2;<;0#2;<;0", "1;++;#2;<;0", "2;&;%d,#2;<;0"], "controlContextBC": [":0", ":&", ":%d,", ":--", "lp:&", "lp:%d,", "lp:<", "lp:0", "lplp:++", "lplp:&", "lplp:%d,", "lp:&", "lp:%d,", "lp:<", "lp:0", "lplp:++", "lplp:&", "lplp:%d,", "lp:0", "lp:<", "lp:0", "lplp:++", "lplp:==", "lplpif:++", "lp:==", "lp:Yes\\n)", "lp:No\\n)", ":0"]}]}