{"nodes": [{"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 1, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " i <= t ;", "links": [], "variables": ["i", "t"], "ids": [], "nodeId": 2, "featuresSelf": [], "operators": ["<="], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": [], "ids": [], "nodeId": 3, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp"], "nodeId": 4, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "ln;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 5, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": "scanf", "links": [], "variables": ["ln"], "ids": ["lp"], "nodeId": 6, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": "a;", "links": [], "variables": ["a", "ln"], "ids": ["lp"], "nodeId": 7, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " j < ln ;", "links": [], "variables": ["j", "ln"], "ids": ["lp"], "nodeId": 8, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 9, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["j"], "ids": ["lp", "lp"], "nodeId": 10, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["a", "j"], "ids": ["lp", "lp"], "nodeId": 11, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": "l;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 12, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["l"], "ids": ["lp"], "nodeId": 13, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": "b;", "links": [], "variables": ["b", "l"], "ids": ["lp"], "nodeId": 14, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " k < l ;", "links": [], "variables": ["k", "l"], "ids": ["lp"], "nodeId": 15, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 16, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["k"], "ids": ["lp", "lp"], "nodeId": 17, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["b", "k"], "ids": ["lp", "lp"], "nodeId": 18, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " j < l ;", "links": [], "variables": ["j", "l"], "ids": ["lp"], "nodeId": 19, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 20, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["j"], "ids": ["lp", "lp"], "nodeId": 21, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " k < ln ;", "links": [], "variables": ["k", "ln"], "ids": ["lp", "lp"], "nodeId": 22, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 23, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["k"], "ids": ["lp", "lp", "lp"], "nodeId": 24, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " a [ k ] == b [ j ] )", "links": [], "variables": ["b", "j", "a", "k"], "ids": ["lp", "lp", "lp"], "nodeId": 25, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": " count ++ ;", "links": [], "variables": ["count"], "ids": ["lp", "lp", "lp", "if"], "nodeId": 26, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " break ;", "links": [], "variables": [], "ids": ["lp", "lp", "lp", "if"], "nodeId": 27, "featuresSelf": ["break"], "operators": [], "constants": [], "features": []}, {"string": " count == l )", "links": [], "variables": ["l", "count"], "ids": ["lp"], "nodeId": 28, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 29, "featuresSelf": ["out"], "operators": [], "constants": ["Yes\\n)"], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp"], "nodeId": 30, "featuresSelf": ["out"], "operators": [], "constants": ["No\\n)"], "features": []}, {"string": " return 0 ;", "links": [], "variables": [], "ids": [], "nodeId": 31, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":", ":1;&;%d,", ":2;<=;1", ":", "lp:1;++;", "lp:0", "lp:1;&;%d,", "lp:", "lp:2;<;0", "lp:", "lplp:1;++;", "lplp:2;&;%d,", "lp:", "lp:1;&;%d,", "lp:", "lp:2;<;0", "lp:", "lplp:1;++;", "lplp:2;&;%d,", "lp:2;<;0", "lp:", "lplp:1;++;", "lplp:2;<;0", "lplp:", "lplplp:1;++;", "lplplp:4;==;", "lplplpif:1;++;", "lplplpif:", "lp:2;==;", "lpif:Yes\\n)", "lp:No\\n)", ":0"], "expr": ["", "1;&;%d,", "2;<=;1", "", "1;++;", "0", "1;&;%d,", "", "2;<;0", "", "1;++;", "2;&;%d,", "", "1;&;%d,", "", "2;<;0", "", "1;++;", "2;&;%d,", "2;<;0", "", "1;++;", "2;<;0", "", "1;++;", "4;==;", "1;++;", "", "2;==;", "Yes\\n)", "No\\n)", "0"], "basic": ["&", "%d,", "<=", "1", "loop", "++", "0", "&", "%d,", "<", "0", "loop", "++", "&", "%d,", "&", "%d,", "<", "0", "loop", "++", "&", "%d,", "<", "0", "loop", "++", "<", "0", "loop", "++", "==", "++", "==", "Yes\\n)", "No\\n)", "0"], "exprDepend": [], "controlContextBC": [":&", ":%d,", ":<=", ":1", "lp:++", "lp:0", "lp:&", "lp:%d,", "lp:<", "lp:0", "lplp:++", "lplp:&", "lplp:%d,", "lp:&", "lp:%d,", "lp:<", "lp:0", "lplp:++", "lplp:&", "lplp:%d,", "lp:<", "lp:0", "lplp:++", "lplp:<", "lplp:0", "lplplp:++", "lplplp:==", "lplplpif:++", "lp:==", "lpif:Yes\\n)", "lp:No\\n)", ":0"]}]}