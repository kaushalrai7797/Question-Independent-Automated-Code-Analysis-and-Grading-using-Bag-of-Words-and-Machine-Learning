{"nodes": [{"string": " return __x ;", "links": [], "variables": ["__x"], "ids": [], "nodeId": 0, "featuresSelf": ["return"], "operators": [], "constants": [], "features": []}, {"string": " return __x ;", "links": [], "variables": ["__x"], "ids": [], "nodeId": 1, "featuresSelf": ["return"], "operators": [], "constants": [], "features": []}, {"string": " return __x ;", "links": [], "variables": ["__x"], "ids": [], "nodeId": 2, "featuresSelf": ["return"], "operators": [], "constants": [], "features": []}, {"string": "t1;", "links": [], "variables": [], "ids": [], "nodeId": 3, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t1"], "ids": [], "nodeId": 4, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " while ( t1 -- )", "links": [], "variables": ["t1"], "ids": [], "nodeId": 5, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "s;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["s", "sg", "fg", "d", "t"], "ids": ["lp"], "nodeId": 7, "featuresSelf": ["in"], "operators": ["&", "&", "&", "&", "&"], "constants": ["%lf%lf%lf%lf%lf,"], "features": []}, {"string": " s + ( ( d * 180.0 ) / t ) ;", "links": [9, 12], "variables": ["rs"], "ids": ["lp"], "nodeId": 8, "featuresSelf": [], "operators": ["+"], "constants": [], "features": []}, {"string": " ( d * 180.0 ) / t )", "links": [10, 11], "variables": [], "ids": ["lp"], "nodeId": 9, "featuresSelf": [], "operators": ["/"], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["t"], "ids": ["lp"], "nodeId": 10, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " d * 180.0 )", "links": [], "variables": ["d"], "ids": ["lp"], "nodeId": 11, "featuresSelf": [], "operators": ["*"], "constants": ["180.0"], "features": []}, {"string": null, "links": [], "variables": ["s"], "ids": ["lp"], "nodeId": 12, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " sg - rs ;", "links": [], "variables": ["rs", "sg"], "ids": ["lp"], "nodeId": 13, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": " fg - rs ;", "links": [], "variables": ["rs", "fg"], "ids": ["lp"], "nodeId": 14, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": " abs ( d1 ) > abs ( d2 ) )", "links": [], "variables": ["d2", "abs", "d1"], "ids": ["lp"], "nodeId": 15, "featuresSelf": ["icn"], "operators": [">"], "constants": [], "features": []}, {"string": " abs ( d2 ) > abs ( d1 ) )", "links": [], "variables": ["d1", "abs", "d2"], "ids": ["lp", "if"], "nodeId": 16, "featuresSelf": ["out", "icn"], "operators": [">"], "constants": ["FATHER\\n)"], "features": []}, {"string": " abs ( d1 ) == abs ( d2 ) )", "links": [], "variables": ["d2", "abs", "d1"], "ids": ["lp", "if"], "nodeId": 17, "featuresSelf": ["out", "icn"], "operators": ["=="], "constants": ["SEBI\\n)"], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 18, "featuresSelf": ["out"], "operators": [], "constants": ["DRAW\\n)"], "features": []}], "features": [{"controlContextEC": [":", ":", ":", ":", ":", ":", ":", ":", ":", ":", ":1;&;%d,", ":1;--;", "lp:", "lp:5;&;5;&;5;&;5;&;5;&;%lf%lf%lf%lf%lf,", "lp:1;+;", "lp:0;/;", "lp:", "lp:1;*;180.0", "lp:", "lp:2;-;", "lp:2;-;", "lp:3;>;", "lpif:3;>;FATHER\\n)", "lpif:3;==;SEBI\\n)", "lpif:DRAW\\n)"], "expr": ["", "", "", "", "", "", "", "", "", "", "1;&;%d,", "1;--;", "", "5;&;5;&;5;&;5;&;5;&;%lf%lf%lf%lf%lf,", "1;+;", "0;/;", "", "1;*;180.0", "", "2;-;", "2;-;", "3;>;", "3;>;FATHER\\n)", "3;==;SEBI\\n)", "DRAW\\n)"], "basic": ["&", "%d,", "--", "loop", "&", "&", "&", "&", "&", "%lf%lf%lf%lf%lf,", "+", "/", "*", "180.0", "-", "-", ">", ">", "FATHER\\n)", "==", "SEBI\\n)", "DRAW\\n)"], "exprDepend": [], "controlContextBC": [":&", ":%d,", ":--", "lp:&", "lp:&", "lp:&", "lp:&", "lp:&", "lp:%lf%lf%lf%lf%lf,", "lp:+", "lp:/", "lp:*", "lp:180.0", "lp:-", "lp:-", "lp:>", "lpif:>", "lpif:FATHER\\n)", "lpif:==", "lpif:SEBI\\n)", "lpif:DRAW\\n)"]}]}