{"nodes": [{"string": " a + 1 ,", "links": [], "variables": ["long", "a"], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": ["+"], "constants": ["1", "1", "0"], "features": []}, {"string": " a % 4 ]", "links": [], "variables": ["res", "a"], "ids": [], "nodeId": 1, "featuresSelf": ["return"], "operators": ["%"], "constants": ["4"], "features": []}, {"string": " f ( b ) ^ f ( a - 1 ) ;", "links": [3, 4], "variables": [], "ids": [], "nodeId": 2, "featuresSelf": ["return"], "operators": ["^"], "constants": [], "features": []}, {"string": " a - 1 )", "links": [], "variables": ["a", "f"], "ids": [], "nodeId": 3, "featuresSelf": [], "operators": ["-"], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": ["b", "f"], "ids": [], "nodeId": 4, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "T;", "links": [], "variables": [], "ids": [], "nodeId": 5, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["T"], "ids": [], "nodeId": 6, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d,"], "features": []}, {"string": " T > 0 )", "links": [], "variables": ["T"], "ids": [], "nodeId": 7, "featuresSelf": ["cn", "loop"], "operators": [">"], "constants": ["0"], "features": []}, {"string": "long;", "links": [], "variables": ["long"], "ids": ["lp"], "nodeId": 8, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["L", "R"], "ids": ["lp"], "nodeId": 9, "featuresSelf": ["in"], "operators": ["&", "&"], "constants": ["%lld%lld,"], "features": []}, {"string": " xor = getXor ( L , R ) ;", "links": [], "variables": ["L", "R", "getXor"], "ids": ["lp"], "nodeId": 10, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " xor % 2 == 0 )", "links": [12, 13], "variables": [], "ids": ["lp"], "nodeId": 11, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 12, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " xor % 2 ==", "links": [], "variables": ["xor"], "ids": ["lp"], "nodeId": 13, "featuresSelf": ["out", "out"], "operators": ["%"], "constants": ["2", "Even\\n)", "Odd\\n)"], "features": []}, {"string": " T -- ;", "links": [], "variables": ["T"], "ids": ["lp"], "nodeId": 14, "featuresSelf": [], "operators": ["--"], "constants": [], "features": []}, {"string": " return 0 ;", "links": [], "variables": [], "ids": [], "nodeId": 15, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":2;+;110", ":2;%;4", ":2;+;110", ":2;%;4", ":0;^;", ":2;-;1", ":", ":2;+;110", ":2;%;4", ":0;^;", ":2;-;1", ":", ":", ":1;&;%d,", ":1;>;0", "lp:", "lp:2;&;2;&;%lld%lld,", "lp:", "lp:0;==;", "lp:0", "lp:1;%;2Even\\n)Odd\\n)", "lp:1;--;", ":0"], "expr": ["2;+;110", "2;%;4", "2;+;110", "2;%;4", "0;^;", "2;-;1", "", "2;+;110", "2;%;4", "0;^;", "2;-;1", "", "", "1;&;%d,", "1;>;0", "", "2;&;2;&;%lld%lld,", "", "0;==;", "0", "1;%;2Even\\n)Odd\\n)", "1;--;", "0"], "basic": ["+", "1", "1", "0", "%", "4", "+", "1", "1", "0", "%", "4", "^", "-", "1", "+", "1", "1", "0", "%", "4", "^", "-", "1", "&", "%d,", ">", "0", "loop", "&", "&", "%lld%lld,", "==", "0", "%", "2", "Even\\n)", "Odd\\n)", "--", "0"], "exprDepend": [], "controlContextBC": [":+", ":1", ":1", ":0", ":%", ":4", ":+", ":1", ":1", ":0", ":%", ":4", ":^", ":-", ":1", ":+", ":1", ":1", ":0", ":%", ":4", ":^", ":-", ":1", ":&", ":%d,", ":>", ":0", "lp:&", "lp:&", "lp:%lld%lld,", "lp:==", "lp:0", "lp:%", "lp:2", "lp:Even\\n)", "lp:Odd\\n)", "lp:--", ":0"]}]}