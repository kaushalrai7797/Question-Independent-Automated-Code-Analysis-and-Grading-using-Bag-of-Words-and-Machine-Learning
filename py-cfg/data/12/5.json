{"nodes": [{"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 1, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " while ( t -- )", "links": [], "variables": ["t"], "ids": [], "nodeId": 2, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "n;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 3, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["n", "m"], "ids": ["lp"], "nodeId": 4, "featuresSelf": ["in"], "operators": ["&", "&"], "constants": ["%d%d"], "features": []}, {"string": "arr1;", "links": [], "variables": ["arr1", "n", "[", "m"], "ids": ["lp"], "nodeId": 5, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " i < n", "links": [], "variables": ["i", "n"], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 7, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 8, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["arr1", "i"], "ids": ["lp", "lp"], "nodeId": 9, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " i < m", "links": [], "variables": ["i", "m"], "ids": ["lp"], "nodeId": 10, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 11, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 12, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["arr2", "i"], "ids": ["lp", "lp"], "nodeId": 13, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": "c10;", "links": [], "variables": ["c10"], "ids": ["lp"], "nodeId": 14, "featuresSelf": [], "operators": [], "constants": ["0", "0", "0", "0"], "features": []}, {"string": " i < n", "links": [], "variables": ["i", "n"], "ids": ["lp"], "nodeId": 15, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 16, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 17, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " arr1 [ i ] == 1", "links": [], "variables": ["arr1", "i"], "ids": ["lp", "lp"], "nodeId": 18, "featuresSelf": ["icn"], "operators": ["=="], "constants": ["1"], "features": []}, {"string": " arr1 [ i ] == 0", "links": [], "variables": ["c11", "arr1", "i"], "ids": ["lp", "lp", "if"], "nodeId": 19, "featuresSelf": ["icn"], "operators": ["++", "=="], "constants": ["0"], "features": []}, {"string": " c10 ++", "links": [], "variables": ["c10"], "ids": ["lp", "lp", "if"], "nodeId": 20, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " i < m", "links": [], "variables": ["i", "m"], "ids": ["lp"], "nodeId": 21, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 22, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 23, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " arr2 [ i ] == 1", "links": [], "variables": ["arr2", "i"], "ids": ["lp", "lp"], "nodeId": 24, "featuresSelf": ["icn"], "operators": ["=="], "constants": ["1"], "features": []}, {"string": " arr2 [ i ] == 0", "links": [], "variables": ["c21", "arr2", "i"], "ids": ["lp", "lp", "if"], "nodeId": 25, "featuresSelf": ["icn"], "operators": ["++", "=="], "constants": ["0"], "features": []}, {"string": " c20 ++", "links": [], "variables": ["c20"], "ids": ["lp", "lp", "if"], "nodeId": 26, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " c20 + c21 == m", "links": [28, 29], "variables": [], "ids": ["lp"], "nodeId": 27, "featuresSelf": ["icn"], "operators": ["&&", "=="], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["m"], "ids": ["lp"], "nodeId": 28, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " c11 + c10 == n", "links": [30, 31], "variables": ["c21", "c20"], "ids": ["lp"], "nodeId": 29, "featuresSelf": [], "operators": ["+", "&&", "=="], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 30, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " c11 == c21", "links": [], "variables": ["c10", "c11", "c21"], "ids": ["lp"], "nodeId": 31, "featuresSelf": [], "operators": ["+", "=="], "constants": [], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 32, "featuresSelf": ["out"], "operators": [], "constants": ["BOB\\n"], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp"], "nodeId": 33, "featuresSelf": ["out"], "operators": [], "constants": ["ALICE\\n"], "features": []}, {"string": " return 0", "links": [], "variables": [], "ids": [], "nodeId": 34, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":", ":1;&;%d", ":1;--;", "lp:", "lp:2;&;2;&;%d%d", "lp:", "lp:2;<;0", "lp:", "lplp:1;++;", "lplp:2;&;%d", "lp:2;<;0", "lp:", "lplp:1;++;", "lplp:2;&;%d", "lp:0000", "lp:2;<;0", "lp:", "lplp:1;++;", "lplp:2;==;1", "lplpif:3;++;3;==;0", "lplpif:1;++;", "lp:2;<;0", "lp:", "lplp:1;++;", "lplp:2;==;1", "lplpif:3;++;3;==;0", "lplpif:1;++;", "lp:0;&&;0;==;", "lp:", "lp:2;+;2;&&;2;==;", "lp:", "lp:3;+;3;==;", "lpif:BOB\\n", "lp:ALICE\\n", ":0"], "expr": ["", "1;&;%d", "1;--;", "", "2;&;2;&;%d%d", "", "2;<;0", "", "1;++;", "2;&;%d", "2;<;0", "", "1;++;", "2;&;%d", "0000", "2;<;0", "", "1;++;", "2;==;1", "3;++;3;==;0", "1;++;", "2;<;0", "", "1;++;", "2;==;1", "3;++;3;==;0", "1;++;", "0;&&;0;==;", "", "2;+;2;&&;2;==;", "", "3;+;3;==;", "BOB\\n", "ALICE\\n", "0"], "basic": ["&", "%d", "--", "loop", "&", "&", "%d%d", "<", "0", "loop", "++", "&", "%d", "<", "0", "loop", "++", "&", "%d", "0", "0", "0", "0", "<", "0", "loop", "++", "==", "1", "++", "==", "0", "++", "<", "0", "loop", "++", "==", "1", "++", "==", "0", "++", "&&", "==", "+", "&&", "==", "+", "==", "BOB\\n", "ALICE\\n", "0"], "exprDepend": [], "controlContextBC": [":&", ":%d", ":--", "lp:&", "lp:&", "lp:%d%d", "lp:<", "lp:0", "lplp:++", "lplp:&", "lplp:%d", "lp:<", "lp:0", "lplp:++", "lplp:&", "lplp:%d", "lp:0", "lp:0", "lp:0", "lp:0", "lp:<", "lp:0", "lplp:++", "lplp:==", "lplp:1", "lplpif:++", "lplpif:==", "lplpif:0", "lplpif:++", "lp:<", "lp:0", "lplp:++", "lplp:==", "lplp:1", "lplpif:++", "lplpif:==", "lplpif:0", "lplpif:++", "lp:&&", "lp:==", "lp:+", "lp:&&", "lp:==", "lp:+", "lp:==", "lpif:BOB\\n", "lp:ALICE\\n", ":0"]}]}