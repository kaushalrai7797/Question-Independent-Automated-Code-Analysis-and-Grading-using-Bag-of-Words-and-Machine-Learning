{"nodes": [{"string": " * _p -> _p ++ = _c", "links": [], "variables": ["_c", "_p", "__swbuf"], "ids": [], "nodeId": 0, "featuresSelf": ["icn", "return", "return"], "operators": ["||", "&&", "!=", ">=", ">=", "--", "++", "++"], "constants": ["'\\n'", "0"], "features": []}, {"string": "T;", "links": [], "variables": [], "ids": [], "nodeId": 1, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["T"], "ids": [], "nodeId": 2, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " while ( T -- )", "links": [], "variables": ["T"], "ids": [], "nodeId": 3, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 4, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": "a1;", "links": [], "variables": ["a1", "n"], "ids": ["lp"], "nodeId": 5, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " i < n", "links": [], "variables": ["n", "i"], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 7, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i", "a1"], "ids": ["lp", "lp"], "nodeId": 8, "featuresSelf": ["in"], "operators": ["++", "&"], "constants": ["%d"], "features": []}, {"string": "scanf", "links": [], "variables": ["m"], "ids": ["lp"], "nodeId": 9, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": "a2;", "links": [], "variables": ["a2", "m"], "ids": ["lp"], "nodeId": 10, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " i < m", "links": [], "variables": ["m", "i"], "ids": ["lp"], "nodeId": 11, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 12, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i", "a2"], "ids": ["lp", "lp"], "nodeId": 13, "featuresSelf": ["in"], "operators": ["++", "&"], "constants": ["%d"], "features": []}, {"string": " count = 0", "links": [], "variables": [], "ids": ["lp"], "nodeId": 14, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " temp = 0", "links": [], "variables": [], "ids": ["lp"], "nodeId": 15, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " i < m", "links": [], "variables": ["m", "i"], "ids": ["lp"], "nodeId": 16, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 17, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 18, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " j < n", "links": [], "variables": ["temp", "n", "j"], "ids": ["lp", "lp"], "nodeId": 19, "featuresSelf": [], "operators": ["<"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 20, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["j"], "ids": ["lp", "lp", "lp"], "nodeId": 21, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " a2 [ i ] == a1 [ j ]", "links": [], "variables": ["a1", "j", "a2", "i"], "ids": ["lp", "lp", "lp"], "nodeId": 22, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": " ++ count", "links": [], "variables": ["count"], "ids": ["lp", "lp", "lp", "if"], "nodeId": 23, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " j + 1", "links": [], "variables": ["j"], "ids": ["lp", "lp", "lp", "if"], "nodeId": 24, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": " break", "links": [], "variables": [], "ids": ["lp", "lp", "lp", "if"], "nodeId": 25, "featuresSelf": ["break"], "operators": [], "constants": [], "features": []}, {"string": " count == m", "links": [], "variables": ["m", "count", "j"], "ids": ["lp"], "nodeId": 26, "featuresSelf": ["icn", "out", "out"], "operators": ["=="], "constants": ["Yes\\n", "No\\n"], "features": []}, {"string": " return 0", "links": [], "variables": [], "ids": [], "nodeId": 27, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", ":3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", ":", ":1;&;%d", ":1;--;", "lp:1;&;%d", "lp:", "lp:2;<;0", "lp:", "lplp:2;++;2;&;%d", "lp:1;&;%d", "lp:", "lp:2;<;0", "lp:", "lplp:2;++;2;&;%d", "lp:0", "lp:0", "lp:2;<;0", "lp:", "lplp:1;++;", "lplp:3;<;", "lplp:", "lplplp:1;++;", "lplplp:4;==;", "lplplpif:1;++;", "lplplpif:1;+;1", "lplplpif:", "lp:3;==;Yes\\nNo\\n", ":0"], "expr": ["3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", "3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", "", "1;&;%d", "1;--;", "1;&;%d", "", "2;<;0", "", "2;++;2;&;%d", "1;&;%d", "", "2;<;0", "", "2;++;2;&;%d", "0", "0", "2;<;0", "", "1;++;", "3;<;", "", "1;++;", "4;==;", "1;++;", "1;+;1", "", "3;==;Yes\\nNo\\n", "0"], "basic": ["||", "&&", "!=", ">=", ">=", "--", "++", "++", "'\\n'", "0", "||", "&&", "!=", ">=", ">=", "--", "++", "++", "'\\n'", "0", "&", "%d", "--", "loop", "&", "%d", "<", "0", "loop", "++", "&", "%d", "&", "%d", "<", "0", "loop", "++", "&", "%d", "0", "0", "<", "0", "loop", "++", "<", "loop", "++", "==", "++", "+", "1", "==", "Yes\\n", "No\\n", "0"], "exprDepend": ["2;<;0#2;<;0", "2;++;2;&;%d#2;<;0", "2;<;0#2;<;0", "2;++;2;&;%d#2;<;0", "2;<;0#2;<;0", "2;++;2;&;%d#2;<;0", "3;<;#1;+;1"], "controlContextBC": [":||", ":&&", ":!=", ":>=", ":>=", ":--", ":++", ":++", ":'\\n'", ":0", ":||", ":&&", ":!=", ":>=", ":>=", ":--", ":++", ":++", ":'\\n'", ":0", ":&", ":%d", ":--", "lp:&", "lp:%d", "lp:<", "lp:0", "lplp:++", "lplp:&", "lplp:%d", "lp:&", "lp:%d", "lp:<", "lp:0", "lplp:++", "lplp:&", "lplp:%d", "lp:0", "lp:0", "lp:<", "lp:0", "lplp:++", "lplp:<", "lplplp:++", "lplplp:==", "lplplpif:++", "lplplpif:+", "lplplpif:1", "lp:==", "lp:Yes\\n", "lp:No\\n", ":0"]}]}