{"nodes": [{"string": " * _p -> _p ++ = _c", "links": [], "variables": ["_c", "_p", "__swbuf"], "ids": [], "nodeId": 0, "featuresSelf": ["icn", "return", "return"], "operators": ["||", "&&", "!=", ">=", ">=", "--", "++", "++"], "constants": ["'\\n'", "0"], "features": []}, {"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 1, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 2, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d\\n"], "features": []}, {"string": " while ( t -- )", "links": [], "variables": ["t"], "ids": [], "nodeId": 3, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 4, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": "a;", "links": [], "variables": ["a", "n"], "ids": ["lp"], "nodeId": 5, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " i < n", "links": [], "variables": ["n", "i"], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 7, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 8, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["a", "i"], "ids": ["lp", "lp"], "nodeId": 9, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": "scanf", "links": [], "variables": ["m"], "ids": ["lp"], "nodeId": 10, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": "b;", "links": [], "variables": ["b", "m"], "ids": ["lp"], "nodeId": 11, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " i < m", "links": [], "variables": ["m", "i"], "ids": ["lp"], "nodeId": 12, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 13, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 14, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["b", "i"], "ids": ["lp", "lp"], "nodeId": 15, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " n >= m", "links": [], "variables": ["m", "n"], "ids": ["lp"], "nodeId": 16, "featuresSelf": ["icn"], "operators": [">="], "constants": [], "features": []}, {"string": " i < m", "links": [], "variables": ["m", "i"], "ids": ["lp", "if"], "nodeId": 17, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 18, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "if", "lp"], "nodeId": 19, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " j < n", "links": [], "variables": ["n", "j"], "ids": ["lp", "if", "lp"], "nodeId": 20, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "if", "lp"], "nodeId": 21, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["j"], "ids": ["lp", "if", "lp", "lp"], "nodeId": 22, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " b [ i ] == a [ j ]", "links": [], "variables": ["a", "j", "b", "i"], "ids": ["lp", "if", "lp", "lp"], "nodeId": 23, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": " count ++", "links": [], "variables": ["count"], "ids": ["lp", "if", "lp", "lp", "if"], "nodeId": 24, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " break", "links": [], "variables": [], "ids": ["lp", "if", "lp", "lp", "if"], "nodeId": 25, "featuresSelf": ["break"], "operators": [], "constants": [], "features": []}, {"string": " count != ( i + 1 )", "links": [27, 28], "variables": [], "ids": ["lp", "if", "lp"], "nodeId": 26, "featuresSelf": ["icn"], "operators": ["!="], "constants": [], "features": []}, {"string": " i + 1", "links": [], "variables": ["i"], "ids": ["lp", "if", "lp"], "nodeId": 27, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": ["count"], "ids": ["lp", "if", "lp"], "nodeId": 28, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp", "if", "lp", "if"], "nodeId": 29, "featuresSelf": ["out"], "operators": [], "constants": ["No\\n"], "features": []}, {"string": " break", "links": [], "variables": [], "ids": ["lp", "if", "lp", "if"], "nodeId": 30, "featuresSelf": ["break"], "operators": [], "constants": [], "features": []}, {"string": " count == m", "links": [], "variables": ["m", "count"], "ids": ["lp", "if"], "nodeId": 31, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp", "if", "if"], "nodeId": 32, "featuresSelf": ["out"], "operators": [], "constants": ["Yes\\n"], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp"], "nodeId": 33, "featuresSelf": ["out"], "operators": [], "constants": ["No\\n"], "features": []}, {"string": " return 0", "links": [], "variables": [], "ids": [], "nodeId": 34, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", ":3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", ":", ":1;&;%d\\n", ":1;--;", "lp:1;&;%d", "lp:0", "lp:2;<;0", "lp:", "lplp:1;++;", "lplp:2;&;%d", "lp:1;&;%d", "lp:", "lp:2;<;0", "lp:", "lplp:1;++;", "lplp:2;&;%d", "lp:2;>=;", "lpif:2;<;0", "lpif:", "lpiflp:1;++;", "lpiflp:2;<;0", "lpiflp:", "lpiflplp:1;++;", "lpiflplp:4;==;", "lpiflplpif:1;++;", "lpiflplpif:", "lpiflp:0;!=;", "lpiflp:1;+;1", "lpiflp:", "lpiflpif:No\\n", "lpiflpif:", "lpif:2;==;", "lpifif:Yes\\n", "lp:No\\n", ":0"], "expr": ["3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", "3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", "", "1;&;%d\\n", "1;--;", "1;&;%d", "0", "2;<;0", "", "1;++;", "2;&;%d", "1;&;%d", "", "2;<;0", "", "1;++;", "2;&;%d", "2;>=;", "2;<;0", "", "1;++;", "2;<;0", "", "1;++;", "4;==;", "1;++;", "", "0;!=;", "1;+;1", "", "No\\n", "", "2;==;", "Yes\\n", "No\\n", "0"], "basic": ["||", "&&", "!=", ">=", ">=", "--", "++", "++", "'\\n'", "0", "||", "&&", "!=", ">=", ">=", "--", "++", "++", "'\\n'", "0", "&", "%d\\n", "--", "loop", "&", "%d", "0", "<", "0", "loop", "++", "&", "%d", "&", "%d", "<", "0", "loop", "++", "&", "%d", ">=", "<", "0", "loop", "++", "<", "0", "loop", "++", "==", "++", "!=", "+", "1", "No\\n", "==", "Yes\\n", "No\\n", "0"], "exprDepend": ["2;<;0#2;<;0", "1;++;#2;<;0", "2;&;%d#2;<;0", "2;<;0#2;<;0", "1;++;#2;<;0", "2;&;%d#2;<;0", "2;<;0#2;<;0", "1;++;#2;<;0", "2;&;%d#2;<;0"], "controlContextBC": [":||", ":&&", ":!=", ":>=", ":>=", ":--", ":++", ":++", ":'\\n'", ":0", ":||", ":&&", ":!=", ":>=", ":>=", ":--", ":++", ":++", ":'\\n'", ":0", ":&", ":%d\\n", ":--", "lp:&", "lp:%d", "lp:0", "lp:<", "lp:0", "lplp:++", "lplp:&", "lplp:%d", "lp:&", "lp:%d", "lp:<", "lp:0", "lplp:++", "lplp:&", "lplp:%d", "lp:>=", "lpif:<", "lpif:0", "lpiflp:++", "lpiflp:<", "lpiflp:0", "lpiflplp:++", "lpiflplp:==", "lpiflplpif:++", "lpiflp:!=", "lpiflp:+", "lpiflp:1", "lpiflpif:No\\n", "lpif:==", "lpifif:Yes\\n", "lp:No\\n", ":0"]}]}