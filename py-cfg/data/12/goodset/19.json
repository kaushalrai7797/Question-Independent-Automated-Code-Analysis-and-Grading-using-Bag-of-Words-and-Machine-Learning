{"nodes": [{"string": " * _p -> _p ++ = _c", "links": [], "variables": ["_c", "_p", "__swbuf"], "ids": [], "nodeId": 0, "featuresSelf": ["icn", "return", "return"], "operators": ["||", "&&", "!=", ">=", ">=", "--", "++", "++"], "constants": ["'\\n'", "0"], "features": []}, {"string": "i;", "links": [], "variables": ["["], "ids": [], "nodeId": 1, "featuresSelf": [], "operators": [], "constants": ["100000", "100000"], "features": []}, {"string": "flag;", "links": [], "variables": ["["], "ids": [], "nodeId": 2, "featuresSelf": [], "operators": [], "constants": ["1000001", "0"], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 3, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " while ( t -- )", "links": [], "variables": ["t"], "ids": [], "nodeId": 4, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": " flag = 0", "links": [], "variables": [], "ids": ["lp"], "nodeId": 5, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " i < 1000001", "links": [], "variables": ["i"], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": ["<"], "constants": ["0", "1000001"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 7, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": " d [ i ] = 0", "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 8, "featuresSelf": [], "operators": ["++"], "constants": ["0"], "features": []}, {"string": "scanf", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 9, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " i < n", "links": [], "variables": ["n", "i"], "ids": ["lp"], "nodeId": 10, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 11, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 12, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["a", "i"], "ids": ["lp", "lp"], "nodeId": 13, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " d [ a [ i ] ] ++", "links": [], "variables": ["d", "a", "i"], "ids": ["lp", "lp"], "nodeId": 14, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["f"], "ids": ["lp"], "nodeId": 15, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " i < f", "links": [], "variables": ["f", "i"], "ids": ["lp"], "nodeId": 16, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 17, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 18, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["sub", "i"], "ids": ["lp", "lp"], "nodeId": 19, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " flag = 1", "links": [], "variables": ["d", "sub", "i"], "ids": ["lp", "lp"], "nodeId": 20, "featuresSelf": ["icn"], "operators": ["=="], "constants": ["0", "1"], "features": []}, {"string": " ! flag", "links": [], "variables": ["flag"], "ids": ["lp"], "nodeId": 21, "featuresSelf": ["icn", "out", "out"], "operators": ["!"], "constants": ["Yes\\n", "No\\n"], "features": []}, {"string": " return 0", "links": [], "variables": [], "ids": [], "nodeId": 22, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", ":3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", ":100000100000", ":10000010", ":1;&;%d", ":1;--;", "lp:0", "lp:1;<;01000001", "lp:", "lplp:1;++;0", "lp:1;&;%d", "lp:2;<;0", "lp:", "lplp:1;++;", "lplp:2;&;%d", "lplp:3;++;", "lp:1;&;%d", "lp:2;<;0", "lp:", "lplp:1;++;", "lplp:2;&;%d", "lplp:3;==;01", "lp:1;!;Yes\\nNo\\n", ":0"], "expr": ["3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", "3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", "100000100000", "10000010", "1;&;%d", "1;--;", "0", "1;<;01000001", "", "1;++;0", "1;&;%d", "2;<;0", "", "1;++;", "2;&;%d", "3;++;", "1;&;%d", "2;<;0", "", "1;++;", "2;&;%d", "3;==;01", "1;!;Yes\\nNo\\n", "0"], "basic": ["||", "&&", "!=", ">=", ">=", "--", "++", "++", "'\\n'", "0", "||", "&&", "!=", ">=", ">=", "--", "++", "++", "'\\n'", "0", "100000", "100000", "1000001", "0", "&", "%d", "--", "loop", "0", "<", "0", "1000001", "loop", "++", "0", "&", "%d", "<", "0", "loop", "++", "&", "%d", "++", "&", "%d", "<", "0", "loop", "++", "&", "%d", "==", "0", "1", "!", "Yes\\n", "No\\n", "0"], "exprDepend": ["1;<;01000001#1;++;0", "1;<;01000001#2;<;0", "1;++;0#2;<;0", "1;<;01000001#2;<;0", "1;++;0#2;<;0", "2;<;0#2;<;0", "1;++;#2;<;0", "2;&;%d#2;<;0", "3;++;#2;<;0"], "controlContextBC": [":||", ":&&", ":!=", ":>=", ":>=", ":--", ":++", ":++", ":'\\n'", ":0", ":||", ":&&", ":!=", ":>=", ":>=", ":--", ":++", ":++", ":'\\n'", ":0", ":100000", ":100000", ":1000001", ":0", ":&", ":%d", ":--", "lp:0", "lp:<", "lp:0", "lp:1000001", "lplp:++", "lplp:0", "lp:&", "lp:%d", "lp:<", "lp:0", "lplp:++", "lplp:&", "lplp:%d", "lplp:++", "lp:&", "lp:%d", "lp:<", "lp:0", "lplp:++", "lplp:&", "lplp:%d", "lplp:==", "lplp:0", "lplp:1", "lp:!", "lp:Yes\\n", "lp:No\\n", ":0"]}]}