{"nodes": [{"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 1, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%i"], "features": []}, {"string": " z < t", "links": [], "variables": ["z", "t"], "ids": [], "nodeId": 2, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": [], "nodeId": 3, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["z"], "ids": ["lp"], "nodeId": 4, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "n;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 5, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 6, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%i"], "features": []}, {"string": "a;", "links": [], "variables": ["a", "n"], "ids": ["lp"], "nodeId": 7, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " i < n", "links": [], "variables": ["i", "n"], "ids": ["lp"], "nodeId": 8, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 9, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i", "a"], "ids": ["lp", "lp"], "nodeId": 10, "featuresSelf": ["in"], "operators": ["++", "&"], "constants": ["%i"], "features": []}, {"string": "p;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 11, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["p"], "ids": ["lp"], "nodeId": 12, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%i"], "features": []}, {"string": "b;", "links": [], "variables": ["b", "p"], "ids": ["lp"], "nodeId": 13, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " i < p", "links": [], "variables": ["i", "p"], "ids": ["lp"], "nodeId": 14, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 15, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i", "b"], "ids": ["lp", "lp"], "nodeId": 16, "featuresSelf": ["in"], "operators": ["++", "&"], "constants": ["%i"], "features": []}, {"string": "te;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 17, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " i < n", "links": [], "variables": ["i", "n"], "ids": ["lp"], "nodeId": 18, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 19, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 20, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " a [ i ] == b [ 0 ]", "links": [], "variables": ["b", "a", "i"], "ids": ["lp", "lp"], "nodeId": 21, "featuresSelf": ["icn"], "operators": ["=="], "constants": ["0"], "features": []}, {"string": " te = i", "links": [], "variables": ["i"], "ids": ["lp", "lp", "if"], "nodeId": 22, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " break", "links": [], "variables": [], "ids": ["lp", "lp", "if"], "nodeId": 23, "featuresSelf": ["break"], "operators": [], "constants": [], "features": []}, {"string": " n + 2", "links": [], "variables": ["n"], "ids": ["lp", "lp"], "nodeId": 24, "featuresSelf": [], "operators": ["+"], "constants": ["2"], "features": []}, {"string": " i < p", "links": [], "variables": ["i", "p"], "ids": ["lp"], "nodeId": 25, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 26, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 27, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " a [ i + te ] != b [ i ]", "links": [29, 30], "variables": [], "ids": ["lp", "lp"], "nodeId": 28, "featuresSelf": ["icn"], "operators": ["!="], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["b", "i"], "ids": ["lp", "lp"], "nodeId": 29, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " temp = 5", "links": [], "variables": ["a", "te", "i"], "ids": ["lp", "lp"], "nodeId": 30, "featuresSelf": [], "operators": ["+"], "constants": ["5"], "features": []}, {"string": " te == n + 2", "links": [32, 33], "variables": [], "ids": ["lp"], "nodeId": 31, "featuresSelf": ["icn"], "operators": ["||", "=="], "constants": [], "features": []}, {"string": " n + 2", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 32, "featuresSelf": [], "operators": ["+"], "constants": ["2"], "features": []}, {"string": " temp == 5", "links": [], "variables": ["te", "temp"], "ids": ["lp"], "nodeId": 33, "featuresSelf": ["out", "out"], "operators": ["=="], "constants": ["5", "No\\n", "Yes\\n"], "features": []}, {"string": " return 0", "links": [], "variables": [], "ids": [], "nodeId": 34, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":", ":1;&;%i", ":2;<;0", ":", "lp:1;++;", "lp:", "lp:1;&;%i", "lp:", "lp:2;<;0", "lp:", "lplp:2;++;2;&;%i", "lp:", "lp:1;&;%i", "lp:", "lp:2;<;0", "lp:", "lplp:2;++;2;&;%i", "lp:0", "lp:2;<;0", "lp:", "lplp:1;++;", "lplp:3;==;0", "lplpif:", "lplpif:", "lplp:1;+;2", "lp:2;<;0", "lp:", "lplp:1;++;", "lplp:0;!=;", "lplp:", "lplp:3;+;5", "lp:0;||;0;==;", "lp:1;+;2", "lp:2;==;5No\\nYes\\n", ":0"], "expr": ["", "1;&;%i", "2;<;0", "", "1;++;", "", "1;&;%i", "", "2;<;0", "", "2;++;2;&;%i", "", "1;&;%i", "", "2;<;0", "", "2;++;2;&;%i", "0", "2;<;0", "", "1;++;", "3;==;0", "", "", "1;+;2", "2;<;0", "", "1;++;", "0;!=;", "", "3;+;5", "0;||;0;==;", "1;+;2", "2;==;5No\\nYes\\n", "0"], "basic": ["&", "%i", "<", "0", "loop", "++", "&", "%i", "<", "0", "loop", "++", "&", "%i", "&", "%i", "<", "0", "loop", "++", "&", "%i", "0", "<", "0", "loop", "++", "==", "0", "+", "2", "<", "0", "loop", "++", "!=", "+", "5", "||", "==", "+", "2", "==", "5", "No\\n", "Yes\\n", "0"], "exprDepend": [], "controlContextBC": [":&", ":%i", ":<", ":0", "lp:++", "lp:&", "lp:%i", "lp:<", "lp:0", "lplp:++", "lplp:&", "lplp:%i", "lp:&", "lp:%i", "lp:<", "lp:0", "lplp:++", "lplp:&", "lplp:%i", "lp:0", "lp:<", "lp:0", "lplp:++", "lplp:==", "lplp:0", "lplp:+", "lplp:2", "lp:<", "lp:0", "lplp:++", "lplp:!=", "lplp:+", "lplp:5", "lp:||", "lp:==", "lp:+", "lp:2", "lp:==", "lp:5", "lp:No\\n", "lp:Yes\\n", ":0"]}]}