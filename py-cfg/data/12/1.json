{"nodes": [{"string": "chef a[20];", "links": [], "variables": ["a"], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": ["20"], "features": []}, {"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 1, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 2, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d\\n,"], "features": []}, {"string": " i < t ;", "links": [], "variables": ["t", "i"], "ids": [], "nodeId": 3, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": [], "nodeId": 4, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp"], "nodeId": 5, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["a", "i"], "ids": ["lp"], "nodeId": 6, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d\\n,"], "features": []}, {"string": " d = a [ i ] . lenseq ;", "links": [], "variables": ["a", "i"], "ids": ["lp"], "nodeId": 7, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " j < d ;", "links": [], "variables": ["d", "j"], "ids": ["lp"], "nodeId": 8, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 9, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["j", "a", "i"], "ids": ["lp", "lp"], "nodeId": 10, "featuresSelf": ["in"], "operators": ["++", "&"], "constants": ["%d,"], "features": []}, {"string": "scanf", "links": [], "variables": ["a", "i"], "ids": ["lp"], "nodeId": 11, "featuresSelf": ["in"], "operators": ["&"], "constants": ["\\n%d\\n,"], "features": []}, {"string": " d = a [ i ] . f ;", "links": [], "variables": ["a", "i"], "ids": ["lp"], "nodeId": 12, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " j < d ;", "links": [], "variables": ["d", "j"], "ids": ["lp"], "nodeId": 13, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 14, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["j", "a", "i"], "ids": ["lp", "lp"], "nodeId": 15, "featuresSelf": ["in"], "operators": ["++", "&"], "constants": ["%d,"], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": [], "nodeId": 16, "featuresSelf": ["out"], "operators": [], "constants": ["\\n)"], "features": []}, {"string": " i < t ;", "links": [], "variables": ["t", "i"], "ids": [], "nodeId": 17, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": [], "nodeId": 18, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp"], "nodeId": 19, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " d = 0 ;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 20, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " c = 0 ;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 21, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " c < a [ i ] . f )", "links": [], "variables": ["a", "i", "c"], "ids": ["lp"], "nodeId": 22, "featuresSelf": ["cn", "loop"], "operators": ["<"], "constants": [], "features": []}, {"string": " j < a [ i ] . lenseq ;", "links": [], "variables": ["a", "i", "j"], "ids": ["lp", "lp"], "nodeId": 23, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 24, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["j"], "ids": ["lp", "lp", "lp"], "nodeId": 25, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " a [ i ] . seq [ j ] == a [ i ] . fseq [ c ] )", "links": [], "variables": ["a", "i", "c", "j"], "ids": ["lp", "lp", "lp"], "nodeId": 26, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": " d ++ ;", "links": [], "variables": ["d"], "ids": ["lp", "lp", "lp", "if"], "nodeId": 27, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " break ;", "links": [], "variables": [], "ids": ["lp", "lp", "lp", "if"], "nodeId": 28, "featuresSelf": ["break"], "operators": [], "constants": [], "features": []}, {"string": " c ++ ;", "links": [], "variables": ["c"], "ids": ["lp", "lp"], "nodeId": 29, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " d == a [ i ] . f )", "links": [], "variables": ["a", "i", "d"], "ids": ["lp"], "nodeId": 30, "featuresSelf": ["icn", "out", "out"], "operators": ["=="], "constants": ["Yes\\n)", "No\\n)"], "features": []}], "features": [{"controlContextEC": [":20", ":", ":1;&;%d\\n,", ":2;<;0", ":", "lp:1;++;", "lp:2;&;%d\\n,", "lp:", "lp:2;<;0", "lp:", "lplp:3;++;3;&;%d,", "lp:2;&;\\n%d\\n,", "lp:", "lp:2;<;0", "lp:", "lplp:3;++;3;&;%d,", ":\\n)", ":2;<;0", ":", "lp:1;++;", "lp:0", "lp:0", "lp:3;<;", "lplp:3;<;0", "lplp:", "lplplp:1;++;", "lplplp:4;==;", "lplplpif:1;++;", "lplplpif:", "lplp:1;++;", "lp:3;==;Yes\\n)No\\n)"], "expr": ["20", "", "1;&;%d\\n,", "2;<;0", "", "1;++;", "2;&;%d\\n,", "", "2;<;0", "", "3;++;3;&;%d,", "2;&;\\n%d\\n,", "", "2;<;0", "", "3;++;3;&;%d,", "\\n)", "2;<;0", "", "1;++;", "0", "0", "3;<;", "3;<;0", "", "1;++;", "4;==;", "1;++;", "", "1;++;", "3;==;Yes\\n)No\\n)"], "basic": ["20", "&", "%d\\n,", "<", "0", "loop", "++", "&", "%d\\n,", "<", "0", "loop", "++", "&", "%d,", "&", "\\n%d\\n,", "<", "0", "loop", "++", "&", "%d,", "\\n)", "<", "0", "loop", "++", "0", "0", "<", "loop", "<", "0", "loop", "++", "==", "++", "++", "==", "Yes\\n)", "No\\n)"], "exprDepend": ["2;<;0#", "2;<;0#2;<;0", "3;++;3;&;%d,#2;<;0", "2;<;0#2;<;0", "1;++;#2;<;0", "2;&;%d\\n,#2;<;0", "#2;<;0", "3;++;3;&;%d,#2;<;0", "2;&;\\n%d\\n,#2;<;0", "#2;<;0", "3;++;3;&;%d,#2;<;0", "2;<;0#0", "2;<;0#0", "2;<;0#3;<;0", "3;++;3;&;%d,#3;<;0", "2;<;0#3;<;0", "3;++;3;&;%d,#3;<;0"], "controlContextBC": [":20", ":&", ":%d\\n,", ":<", ":0", "lp:++", "lp:&", "lp:%d\\n,", "lp:<", "lp:0", "lplp:++", "lplp:&", "lplp:%d,", "lp:&", "lp:\\n%d\\n,", "lp:<", "lp:0", "lplp:++", "lplp:&", "lplp:%d,", ":\\n)", ":<", ":0", "lp:++", "lp:0", "lp:0", "lp:<", "lplp:<", "lplp:0", "lplplp:++", "lplplp:==", "lplplpif:++", "lplp:++", "lp:==", "lp:Yes\\n)", "lp:No\\n)"]}]}