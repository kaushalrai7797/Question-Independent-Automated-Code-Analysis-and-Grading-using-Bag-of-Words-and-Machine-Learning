{"nodes": [{"string": "j;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": "scanf", "links": [], "variables": ["test_cases"], "ids": [], "nodeId": 1, "featuresSelf": ["in"], "operators": ["&"], "constants": ["\\n%i"], "features": []}, {"string": " while ( test_cases -- )", "links": [], "variables": ["test_cases"], "ids": [], "nodeId": 2, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["N"], "ids": ["lp"], "nodeId": 3, "featuresSelf": ["in"], "operators": ["&"], "constants": ["\\n%i\\n"], "features": []}, {"string": " sumN += N", "links": [], "variables": ["N", "sumN"], "ids": ["lp"], "nodeId": 4, "featuresSelf": [], "operators": ["+="], "constants": [], "features": []}, {"string": " sumN <= 100000", "links": [], "variables": ["sumN"], "ids": ["lp"], "nodeId": 5, "featuresSelf": ["icn"], "operators": ["<="], "constants": ["100000"], "features": []}, {"string": "array;", "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 6, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "long;", "links": [], "variables": ["long"], "ids": ["lp", "if"], "nodeId": 7, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " j < N", "links": [], "variables": ["N", "j"], "ids": ["lp", "if"], "nodeId": 8, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 9, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["j"], "ids": ["lp", "if", "lp"], "nodeId": 10, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["array"], "ids": ["lp", "if", "lp"], "nodeId": 11, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%c"], "features": []}, {"string": " array == '1'", "links": [], "variables": ["array", "count"], "ids": ["lp", "if", "lp"], "nodeId": 12, "featuresSelf": ["icn"], "operators": ["==", "++"], "constants": ["'1'"], "features": []}, {"string": " ( count + 1 ) * count / 2", "links": [14, 15], "variables": [], "ids": ["lp", "if"], "nodeId": 13, "featuresSelf": [], "operators": ["/"], "constants": ["%lli\\n"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 14, "featuresSelf": [], "operators": [], "constants": ["2"], "features": []}, {"string": " ( count + 1 ) * count", "links": [16, 17], "variables": [], "ids": ["lp", "if"], "nodeId": 15, "featuresSelf": [], "operators": ["*"], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["count"], "ids": ["lp", "if"], "nodeId": 16, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " count + 1", "links": [], "variables": ["count"], "ids": ["lp", "if"], "nodeId": 17, "featuresSelf": ["out"], "operators": ["+"], "constants": ["1"], "features": []}, {"string": " return 0", "links": [], "variables": [], "ids": [], "nodeId": 18, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":0", ":1;&;\\n%i", ":1;--;", "lp:1;&;\\n%i\\n", "lp:2;+=;", "lp:1;<=;100000", "lpif:", "lpif:0", "lpif:2;<;0", "lpif:", "lpiflp:1;++;", "lpiflp:1;&;%c", "lpiflp:2;==;2;++;'1'", "lpif:0;/;%lli\\n", "lpif:2", "lpif:0;*;", "lpif:", "lpif:1;+;1", ":0"], "expr": ["0", "1;&;\\n%i", "1;--;", "1;&;\\n%i\\n", "2;+=;", "1;<=;100000", "", "0", "2;<;0", "", "1;++;", "1;&;%c", "2;==;2;++;'1'", "0;/;%lli\\n", "2", "0;*;", "", "1;+;1", "0"], "basic": ["0", "&", "\\n%i", "--", "loop", "&", "\\n%i\\n", "+=", "<=", "100000", "0", "<", "0", "loop", "++", "&", "%c", "==", "++", "'1'", "/", "%lli\\n", "2", "*", "+", "1", "0"], "exprDepend": [], "controlContextBC": [":0", ":&", ":\\n%i", ":--", "lp:&", "lp:\\n%i\\n", "lp:+=", "lp:<=", "lp:100000", "lpif:0", "lpif:<", "lpif:0", "lpiflp:++", "lpiflp:&", "lpiflp:%c", "lpiflp:==", "lpiflp:++", "lpiflp:'1'", "lpif:/", "lpif:%lli\\n", "lpif:2", "lpif:*", "lpif:+", "lpif:1", ":0"]}]}