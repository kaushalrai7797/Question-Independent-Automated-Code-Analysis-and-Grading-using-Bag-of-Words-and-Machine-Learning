{"nodes": [{"string": " * _p -> _p ++ = _c", "links": [], "variables": ["_c", "_p", "__swbuf"], "ids": [], "nodeId": 0, "featuresSelf": ["icn", "return", "return"], "operators": ["||", "&&", "!=", ">=", ">=", "--", "++", "++"], "constants": ["'\\n'", "0"], "features": []}, {"string": "c;", "links": [], "variables": [], "ids": [], "nodeId": 1, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "d;", "links": [], "variables": [], "ids": [], "nodeId": 2, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 3, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " while ( t -- )", "links": [], "variables": ["t"], "ids": [], "nodeId": 4, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["n", "k", "s"], "ids": ["lp"], "nodeId": 5, "featuresSelf": ["in"], "operators": ["&", "&", "&"], "constants": ["%d%d%d"], "features": []}, {"string": " ( float ) n / k", "links": [], "variables": ["k", "n"], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": ["/"], "constants": [], "features": []}, {"string": " c = d", "links": [], "variables": ["d"], "ids": ["lp"], "nodeId": 7, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " ( n - k ) * 6 >= k", "links": [9, 10], "variables": ["d"], "ids": ["lp"], "nodeId": 8, "featuresSelf": ["icn"], "operators": ["!-", "&&", "||", "<", ">", ">="], "constants": ["6", "7"], "features": []}, {"string": null, "links": [], "variables": ["k"], "ids": ["lp"], "nodeId": 9, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " ( n - k ) * 6", "links": [11, 12], "variables": [], "ids": ["lp"], "nodeId": 10, "featuresSelf": [], "operators": ["*"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 11, "featuresSelf": [], "operators": [], "constants": ["6"], "features": []}, {"string": " n - k", "links": [], "variables": ["k", "n"], "ids": ["lp"], "nodeId": 12, "featuresSelf": ["out"], "operators": ["-"], "constants": ["-1\\n"], "features": []}, {"string": " s / d", "links": [], "variables": ["d", "s"], "ids": ["lp"], "nodeId": 13, "featuresSelf": [], "operators": ["/"], "constants": [], "features": []}, {"string": " s % c != 0", "links": [15, 16], "variables": [], "ids": ["lp"], "nodeId": 14, "featuresSelf": ["icn"], "operators": ["!="], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 15, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " s % c", "links": [], "variables": ["c", "s", "b"], "ids": ["lp"], "nodeId": 16, "featuresSelf": [], "operators": ["%", "++"], "constants": [], "features": []}, {"string": "printf", "links": [], "variables": ["b"], "ids": ["lp"], "nodeId": 17, "featuresSelf": ["out"], "operators": [], "constants": ["%d\\n"], "features": []}], "features": [{"controlContextEC": [":3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", ":3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", ":", ":", ":1;&;%d", ":1;--;", "lp:3;&;3;&;3;&;%d%d%d", "lp:2;/;", "lp:", "lp:1;!-;1;&&;1;||;1;<;1;>;1;>=;67", "lp:", "lp:0;*;", "lp:6", "lp:2;-;-1\\n", "lp:2;/;", "lp:0;!=;", "lp:0", "lp:3;%;3;++;", "lp:%d\\n"], "expr": ["3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", "3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", "", "", "1;&;%d", "1;--;", "3;&;3;&;3;&;%d%d%d", "2;/;", "", "1;!-;1;&&;1;||;1;<;1;>;1;>=;67", "", "0;*;", "6", "2;-;-1\\n", "2;/;", "0;!=;", "0", "3;%;3;++;", "%d\\n"], "basic": ["||", "&&", "!=", ">=", ">=", "--", "++", "++", "'\\n'", "0", "||", "&&", "!=", ">=", ">=", "--", "++", "++", "'\\n'", "0", "&", "%d", "--", "loop", "&", "&", "&", "%d%d%d", "/", "!-", "&&", "||", "<", ">", ">=", "6", "7", "*", "6", "-", "-1\\n", "/", "!=", "0", "%", "++", "%d\\n"], "exprDepend": [], "controlContextBC": [":||", ":&&", ":!=", ":>=", ":>=", ":--", ":++", ":++", ":'\\n'", ":0", ":||", ":&&", ":!=", ":>=", ":>=", ":--", ":++", ":++", ":'\\n'", ":0", ":&", ":%d", ":--", "lp:&", "lp:&", "lp:&", "lp:%d%d%d", "lp:/", "lp:!-", "lp:&&", "lp:||", "lp:<", "lp:>", "lp:>=", "lp:6", "lp:7", "lp:*", "lp:6", "lp:-", "lp:-1\\n", "lp:/", "lp:!=", "lp:0", "lp:%", "lp:++", "lp:%d\\n"]}]}