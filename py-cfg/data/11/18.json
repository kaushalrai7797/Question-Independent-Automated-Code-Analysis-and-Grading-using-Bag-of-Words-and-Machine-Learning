{"nodes": [{"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 1, "featuresSelf": ["in", "&%d,"], "operators": ["&"], "constants": ["%d,"], "features": ["&%d,", "in"]}, {"string": " while ( t -- )", "links": [1], "variables": ["t"], "ids": [], "nodeId": 2, "featuresSelf": ["cn", "--"], "operators": ["--"], "constants": [], "features": ["--", "&%d,", "cn", "in"]}, {"string": "flag;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 3, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "char s1[1000];", "links": [], "variables": ["s1", "["], "ids": ["lp"], "nodeId": 4, "featuresSelf": ["1000", "1000"], "operators": [], "constants": ["1000", "1000"], "features": ["1000"]}, {"string": "scanf", "links": [4], "variables": ["s1"], "ids": ["lp"], "nodeId": 5, "featuresSelf": ["in", "%s,"], "operators": [], "constants": ["%s,"], "features": ["%s,", "1000", "in"]}, {"string": "scanf", "links": [], "variables": ["s2"], "ids": ["lp"], "nodeId": 6, "featuresSelf": ["in", "%s,"], "operators": [], "constants": ["%s,"], "features": ["%s,", "in"]}, {"string": " flag = check_subsequence ( s2 , s1 ) ;", "links": [6, 5], "variables": ["s2", "strlen", "s1", "check_subsequence"], "ids": ["lp"], "nodeId": 7, "featuresSelf": ["icn", "<"], "operators": ["<"], "constants": [], "features": ["%s,", "in", "icn", "1000", "<"]}, {"string": null, "links": [7], "variables": ["flag"], "ids": ["lp"], "nodeId": 8, "featuresSelf": ["out", "out", "YES\\n)", "NO\\n)"], "operators": [], "constants": ["YES\\n)", "NO\\n)"], "features": ["<", "NO\\n)", "icn", "YES\\n)", "out"]}, {"string": " return 0 ;", "links": [], "variables": [], "ids": [], "nodeId": 9, "featuresSelf": ["return", "0"], "operators": [], "constants": ["0"], "features": ["0", "return"]}]}