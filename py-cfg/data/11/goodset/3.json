{"nodes": [{"string": " * _p -> _p ++ = _c", "links": [], "variables": ["_c", "_p", "__swbuf"], "ids": [], "nodeId": 0, "featuresSelf": ["icn", "return", "return"], "operators": ["||", "&&", "!=", ">=", ">=", "--", "++", "++"], "constants": ["'\\n'", "0"], "features": []}, {"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 1, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 2, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " while ( t -- )", "links": [], "variables": ["t"], "ids": [], "nodeId": 3, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["n", "k", "s"], "ids": ["lp"], "nodeId": 4, "featuresSelf": ["in"], "operators": ["&", "&", "&"], "constants": ["%d%d%d"], "features": []}, {"string": " s - ( s / 7 )", "links": [6, 7], "variables": [], "ids": ["lp"], "nodeId": 5, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": " s / 7", "links": [], "variables": ["s"], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": ["/"], "constants": ["7"], "features": []}, {"string": null, "links": [], "variables": ["s"], "ids": ["lp"], "nodeId": 7, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " ( n * od ) >= ( k * s )", "links": [9, 10], "variables": [], "ids": ["lp"], "nodeId": 8, "featuresSelf": ["icn"], "operators": [">="], "constants": [], "features": []}, {"string": " k * s", "links": [], "variables": ["s", "k"], "ids": ["lp"], "nodeId": 9, "featuresSelf": [], "operators": ["*"], "constants": [], "features": []}, {"string": " n * od", "links": [], "variables": ["od", "n"], "ids": ["lp"], "nodeId": 10, "featuresSelf": [], "operators": ["*"], "constants": [], "features": []}, {"string": " ( ( k * s ) / n ) + ( ( ( k * s ) % n ) != 0 )", "links": [12, 17], "variables": [], "ids": ["lp", "if"], "nodeId": 11, "featuresSelf": [], "operators": ["+"], "constants": [], "features": []}, {"string": " ( ( k * s ) % n ) != 0", "links": [13, 14], "variables": [], "ids": ["lp", "if"], "nodeId": 12, "featuresSelf": [], "operators": ["!="], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 13, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " ( k * s ) % n", "links": [15, 16], "variables": [], "ids": ["lp", "if"], "nodeId": 14, "featuresSelf": [], "operators": ["%"], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["n"], "ids": ["lp", "if"], "nodeId": 15, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " k * s", "links": [], "variables": ["s", "k"], "ids": ["lp", "if"], "nodeId": 16, "featuresSelf": [], "operators": ["*"], "constants": [], "features": []}, {"string": " ( k * s ) / n", "links": [18, 19], "variables": [], "ids": ["lp", "if"], "nodeId": 17, "featuresSelf": [], "operators": ["/"], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["n"], "ids": ["lp", "if"], "nodeId": 18, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " k * s", "links": [], "variables": ["s", "k"], "ids": ["lp", "if"], "nodeId": 19, "featuresSelf": [], "operators": ["*"], "constants": [], "features": []}, {"string": "printf", "links": [], "variables": ["l"], "ids": ["lp", "if"], "nodeId": 20, "featuresSelf": ["out", "out"], "operators": [], "constants": ["%d\\n", "-1\\n"], "features": []}], "features": [{"controlContextEC": [":3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", ":3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", ":", ":1;&;%d", ":1;--;", "lp:3;&;3;&;3;&;%d%d%d", "lp:0;-;", "lp:1;/;7", "lp:", "lp:0;>=;", "lp:2;*;", "lp:2;*;", "lpif:0;+;", "lpif:0;!=;", "lpif:0", "lpif:0;%;", "lpif:", "lpif:2;*;", "lpif:0;/;", "lpif:", "lpif:2;*;", "lpif:%d\\n-1\\n"], "expr": ["3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", "3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", "", "1;&;%d", "1;--;", "3;&;3;&;3;&;%d%d%d", "0;-;", "1;/;7", "", "0;>=;", "2;*;", "2;*;", "0;+;", "0;!=;", "0", "0;%;", "", "2;*;", "0;/;", "", "2;*;", "%d\\n-1\\n"], "basic": ["||", "&&", "!=", ">=", ">=", "--", "++", "++", "'\\n'", "0", "||", "&&", "!=", ">=", ">=", "--", "++", "++", "'\\n'", "0", "&", "%d", "--", "loop", "&", "&", "&", "%d%d%d", "-", "/", "7", ">=", "*", "*", "+", "!=", "0", "%", "*", "/", "*", "%d\\n", "-1\\n"], "exprDepend": [], "controlContextBC": [":||", ":&&", ":!=", ":>=", ":>=", ":--", ":++", ":++", ":'\\n'", ":0", ":||", ":&&", ":!=", ":>=", ":>=", ":--", ":++", ":++", ":'\\n'", ":0", ":&", ":%d", ":--", "lp:&", "lp:&", "lp:&", "lp:%d%d%d", "lp:-", "lp:/", "lp:7", "lp:>=", "lp:*", "lp:*", "lpif:+", "lpif:!=", "lpif:0", "lpif:%", "lpif:*", "lpif:/", "lpif:*", "lpif:%d\\n", "lpif:-1\\n"]}]}