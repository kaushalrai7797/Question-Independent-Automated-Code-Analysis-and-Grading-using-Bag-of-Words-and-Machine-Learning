{"nodes": [{"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 1, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d\\n"], "features": []}, {"string": "l1;", "links": [], "variables": [], "ids": [], "nodeId": 2, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "*;", "links": [], "variables": ["*"], "ids": [], "nodeId": 3, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " while ( t -- )", "links": [], "variables": ["t"], "ids": [], "nodeId": 4, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "gets", "links": [], "variables": ["str"], "ids": ["lp"], "nodeId": 5, "featuresSelf": ["in"], "operators": [], "constants": [], "features": []}, {"string": " s1 = str", "links": [], "variables": ["str"], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " s2 = strchr ( str , 32 )", "links": [], "variables": ["str", "strchr"], "ids": ["lp"], "nodeId": 7, "featuresSelf": [], "operators": [], "constants": ["32"], "features": []}, {"string": " * s2 = 0", "links": [], "variables": [], "ids": ["lp"], "nodeId": 8, "featuresSelf": [], "operators": [""], "constants": ["0"], "features": []}, {"string": "Implicit Cast", "links": [], "variables": ["s2"], "ids": ["lp"], "nodeId": 9, "featuresSelf": [], "operators": ["++", "++"], "constants": [], "features": []}, {"string": " l1 = strlen ( s1 )", "links": [], "variables": ["s1", "strlen"], "ids": ["lp"], "nodeId": 10, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " l2 = strlen ( s2 )", "links": [], "variables": ["s2", "strlen"], "ids": ["lp"], "nodeId": 11, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " l1 > l2", "links": [], "variables": ["l2", "l1"], "ids": ["lp"], "nodeId": 12, "featuresSelf": ["icn"], "operators": [">"], "constants": [], "features": []}, {"string": " tmp = s1", "links": [], "variables": ["s1"], "ids": ["lp", "if"], "nodeId": 13, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " s1 = s2", "links": [], "variables": ["s2"], "ids": ["lp", "if"], "nodeId": 14, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " s2 = tmp", "links": [], "variables": ["tmp"], "ids": ["lp", "if"], "nodeId": 15, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " * s1 && * s2", "links": [], "variables": ["s2", "s1"], "ids": ["lp"], "nodeId": 16, "featuresSelf": ["cn", "loop"], "operators": ["&&", "", ""], "constants": [], "features": []}, {"string": " * s1 == * s2", "links": [18, 19], "variables": [], "ids": ["lp", "lp"], "nodeId": 17, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["s2"], "ids": ["lp", "lp"], "nodeId": 18, "featuresSelf": [], "operators": [""], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["s1"], "ids": ["lp", "lp"], "nodeId": 19, "featuresSelf": [], "operators": ["", "++"], "constants": [], "features": []}, {"string": " s2 ++", "links": [], "variables": ["s2"], "ids": ["lp", "lp"], "nodeId": 20, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "Implicit Cast", "links": [], "variables": ["s1"], "ids": ["lp"], "nodeId": 21, "featuresSelf": ["icn", "out", "out"], "operators": [""], "constants": ["NO\\n", "YES\\n"], "features": []}, {"string": " return 0", "links": [], "variables": [], "ids": [], "nodeId": 22, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":", ":1;&;%d\\n", ":", ":", ":1;--;", "lp:", "lp:", "lp:32", "lp:0;;0", "lp:1;++;1;++;", "lp:", "lp:", "lp:2;>;", "lpif:", "lpif:", "lpif:", "lp:2;&&;2;;2;;", "lplp:0;==;", "lplp:1;;", "lplp:1;;1;++;", "lplp:1;++;", "lp:1;;NO\\nYES\\n", ":0"], "expr": ["", "1;&;%d\\n", "", "", "1;--;", "", "", "32", "0;;0", "1;++;1;++;", "", "", "2;>;", "", "", "", "2;&&;2;;2;;", "0;==;", "1;;", "1;;1;++;", "1;++;", "1;;NO\\nYES\\n", "0"], "basic": ["&", "%d\\n", "--", "loop", "32", "", "0", "++", "++", ">", "&&", "", "", "loop", "==", "", "", "++", "++", "", "NO\\n", "YES\\n", "0"], "exprDepend": ["#", "#", "1;++;1;++;#", "#", "#"], "controlContextBC": [":&", ":%d\\n", ":--", "lp:32", "lp:", "lp:0", "lp:++", "lp:++", "lp:>", "lp:&&", "lp:", "lp:", "lplp:==", "lplp:", "lplp:", "lplp:++", "lplp:++", "lp:", "lp:NO\\n", "lp:YES\\n", ":0"]}]}