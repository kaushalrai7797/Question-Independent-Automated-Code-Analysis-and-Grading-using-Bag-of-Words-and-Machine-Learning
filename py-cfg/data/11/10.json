{"nodes": [{"string": "t;", "links": [], "variables": ["-"], "ids": [], "nodeId": 0, "featuresSelf": ["-1"], "operators": ["-"], "constants": ["1"], "features": ["-1"]}, {"string": "char a[30000];", "links": [], "variables": ["a"], "ids": [], "nodeId": 1, "featuresSelf": ["30000"], "operators": [], "constants": ["30000"], "features": ["30000"]}, {"string": "char b[30000];", "links": [], "variables": ["b"], "ids": [], "nodeId": 2, "featuresSelf": ["30000"], "operators": [], "constants": ["30000"], "features": ["30000"]}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 3, "featuresSelf": ["in", "&%d,"], "operators": ["&"], "constants": ["%d,"], "features": ["&%d,", "in"]}, {"string": " while ( t -- )", "links": [3], "variables": ["t"], "ids": [], "nodeId": 4, "featuresSelf": ["cn", "--"], "operators": ["--"], "constants": [], "features": ["--", "&%d,", "cn", "in"]}, {"string": " ma = - 1 ;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 5, "featuresSelf": ["-1"], "operators": ["-"], "constants": ["1"], "features": ["-1"]}, {"string": "scanf", "links": [1, 2], "variables": ["a", "b"], "ids": ["lp"], "nodeId": 6, "featuresSelf": ["in", "&%s%s,", "&%s%s,"], "operators": ["&", "&"], "constants": ["%s%s,"], "features": ["&%s%s,", "30000", "in"]}, {"string": " strlen ( b ) == strlen ( a ) )", "links": [6, 6], "variables": ["a", "strlen", "b"], "ids": ["lp"], "nodeId": 7, "featuresSelf": ["icn", "=="], "operators": ["=="], "constants": [], "features": ["==", "&%s%s,", "icn", "30000", "in"]}, {"string": " strcmp ( a , b ) == 0 )", "links": [9, 10], "variables": [], "ids": ["lp", "if"], "nodeId": 8, "featuresSelf": ["icn", "=="], "operators": ["=="], "constants": [], "features": ["0", "icn", ">YES\\n)", "==", ">NO\\n)", "out"]}, {"string": null, "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 9, "featuresSelf": ["0"], "operators": [], "constants": ["0"], "features": ["0"]}, {"string": " strlen ( b ) > strlen ( a ) )", "links": [7, 7, 7], "variables": ["a", "b", "strcmp", "strlen"], "ids": ["lp", "if"], "nodeId": 10, "featuresSelf": ["out", "out", "icn", ">YES\\n)", ">NO\\n)"], "operators": [">"], "constants": ["YES\\n)", "NO\\n)"], "features": [">YES\\n)", "icn", "30000", "==", ">NO\\n)", "in", "&%s%s,", "out"]}, {"string": " k = 1 ;", "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 11, "featuresSelf": ["1"], "operators": [], "constants": ["1"], "features": ["1"]}, {"string": " ma = - 1 ;", "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 12, "featuresSelf": ["-1"], "operators": ["-"], "constants": ["1"], "features": ["-1"]}, {"string": " i < strlen ( a ) ;", "links": [10, 10], "variables": ["a", "strlen", "i"], "ids": ["lp", "if"], "nodeId": 13, "featuresSelf": ["<0"], "operators": ["<"], "constants": ["0"], "features": [">YES\\n)", "30000", "icn", "<0", "==", ">NO\\n)", "in", "&%s%s,", "out"]}, {"string": null, "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 14, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": ["cn"]}, {"string": null, "links": [13], "variables": ["i"], "ids": ["lp", "if", "lp"], "nodeId": 15, "featuresSelf": ["++"], "operators": ["++"], "constants": [], "features": ["++", "<0"]}, {"string": " c = 0 ;", "links": [], "variables": [], "ids": ["lp", "if", "lp"], "nodeId": 16, "featuresSelf": ["0"], "operators": [], "constants": ["0"], "features": ["0"]}, {"string": " j < strlen ( b ) ;", "links": [10, 13], "variables": ["b", "strlen", "j"], "ids": ["lp", "if", "lp"], "nodeId": 17, "featuresSelf": ["<0"], "operators": ["<"], "constants": ["0"], "features": [">YES\\n)", "30000", "icn", "<0", "==", ">NO\\n)", "in", "&%s%s,", "out"]}, {"string": null, "links": [], "variables": [], "ids": ["lp", "if", "lp"], "nodeId": 18, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": ["cn"]}, {"string": null, "links": [17], "variables": ["j"], "ids": ["lp", "if", "lp", "lp"], "nodeId": 19, "featuresSelf": ["++"], "operators": ["++"], "constants": [], "features": ["++", "<0"]}, {"string": " a [ i ] == b [ j ] )", "links": [17, 19, 13, 15], "variables": ["b", "j", "a", "i"], "ids": ["lp", "if", "lp", "lp"], "nodeId": 20, "featuresSelf": ["icn", "=="], "operators": ["=="], "constants": [], "features": [">YES\\n)", "30000", "icn", "<0", "==", ">NO\\n)", "++", "in", "&%s%s,", "out"]}, {"string": " j >= ma )", "links": [12, 20], "variables": ["ma", "j"], "ids": ["lp", "if", "lp", "lp", "if"], "nodeId": 21, "featuresSelf": ["icn", ">="], "operators": [">="], "constants": [], "features": ["++", "-1", "icn", "<0", "==", ">="]}, {"string": " ma = j ;", "links": [21], "variables": ["j"], "ids": ["lp", "if", "lp", "lp", "if", "if"], "nodeId": 22, "featuresSelf": [], "operators": [], "constants": [], "features": ["++", "==", "icn", "<0", ">="]}, {"string": " c = 1 ;", "links": [], "variables": [], "ids": ["lp", "if", "lp", "lp", "if", "if"], "nodeId": 23, "featuresSelf": ["1"], "operators": [], "constants": ["1"], "features": ["1"]}, {"string": " break ;", "links": [], "variables": [], "ids": ["lp", "if", "lp", "lp", "if", "if"], "nodeId": 24, "featuresSelf": ["break"], "operators": [], "constants": [], "features": ["break"]}, {"string": " c == 0 )", "links": [23], "variables": ["c"], "ids": ["lp", "if", "lp"], "nodeId": 25, "featuresSelf": ["icn", "==0"], "operators": ["=="], "constants": ["0"], "features": ["1", "icn", "==0"]}, {"string": " k = 0 ;", "links": [], "variables": [], "ids": ["lp", "if", "lp", "if"], "nodeId": 26, "featuresSelf": ["0"], "operators": [], "constants": ["0"], "features": ["0"]}, {"string": " break ;", "links": [], "variables": [], "ids": ["lp", "if", "lp", "if"], "nodeId": 27, "featuresSelf": ["break"], "operators": [], "constants": [], "features": ["break"]}, {"string": " strlen ( a ) > strlen ( b ) )", "links": [26, 20, 17, 20], "variables": ["k", "b", "strlen", "a"], "ids": ["lp", "if"], "nodeId": 28, "featuresSelf": ["icn", "out", "icn", "out", "icn", "==1", "==YES\\n)", "==0", "==NO\\n)", "==1", "==YES\\n)", "==0", "==NO\\n)", ">1", ">YES\\n)", ">0", ">NO\\n)"], "operators": ["==", "==", ">"], "constants": ["1", "YES\\n)", "0", "NO\\n)"], "features": [">YES\\n)", "30000", "icn", "<0", "0", ">0", "==NO\\n)", "in", "==1", "==0", "==", "==YES\\n)", ">1", "&%s%s,", ">NO\\n)", "out"]}, {"string": " k = 1 ;", "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 29, "featuresSelf": ["1"], "operators": [], "constants": ["1"], "features": ["1"]}, {"string": " i < strlen ( b ) ;", "links": [28, 28, 20], "variables": ["b", "strlen", "i"], "ids": ["lp", "if"], "nodeId": 30, "featuresSelf": ["<0"], "operators": ["<"], "constants": ["0"], "features": [">YES\\n)", "<0", ">0", "==NO\\n)", "in", "&%s%s,", ">NO\\n)", "out", "30000", "icn", "++", "==1", "==0", "==", "==YES\\n)", ">1"]}, {"string": null, "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 31, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": ["cn"]}, {"string": null, "links": [30], "variables": ["i"], "ids": ["lp", "if", "lp"], "nodeId": 32, "featuresSelf": ["++"], "operators": ["++"], "constants": [], "features": ["++", "==", "icn", "<0"]}, {"string": " c = 0 ;", "links": [], "variables": [], "ids": ["lp", "if", "lp"], "nodeId": 33, "featuresSelf": ["0"], "operators": [], "constants": ["0"], "features": ["0"]}, {"string": " ma = - 1 ;", "links": [], "variables": [], "ids": ["lp", "if", "lp"], "nodeId": 34, "featuresSelf": ["-1"], "operators": ["-"], "constants": ["1"], "features": ["-1"]}, {"string": " j < strlen ( a ) ;", "links": [28, 30, 22], "variables": ["a", "strlen", "j"], "ids": ["lp", "if", "lp"], "nodeId": 35, "featuresSelf": ["<0"], "operators": ["<"], "constants": ["0"], "features": [">YES\\n)", ">=", "<0", ">0", "==NO\\n)", "in", "&%s%s,", ">NO\\n)", "icn", "30000", "++", "==1", "==0", "==", "==YES\\n)", ">1", "out"]}, {"string": null, "links": [], "variables": [], "ids": ["lp", "if", "lp"], "nodeId": 36, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": ["cn"]}, {"string": null, "links": [35], "variables": ["j"], "ids": ["lp", "if", "lp", "lp"], "nodeId": 37, "featuresSelf": ["++"], "operators": ["++"], "constants": [], "features": ["==", "icn", "<0", "++", ">="]}, {"string": " b [ i ] == a [ j ] )", "links": [35, 37, 30, 32], "variables": ["a", "j", "b", "i"], "ids": ["lp", "if", "lp", "lp"], "nodeId": 38, "featuresSelf": ["icn", "=="], "operators": ["=="], "constants": [], "features": [">YES\\n)", ">=", "<0", "==", ">1", "in", "&%s%s,", "out", "30000", "icn", "++", "==1", "==0", ">0", "==YES\\n)", "==NO\\n)", ">NO\\n)"]}, {"string": " j >= ma )", "links": [34, 38], "variables": ["ma", "j"], "ids": ["lp", "if", "lp", "lp", "if"], "nodeId": 39, "featuresSelf": ["icn", ">="], "operators": [">="], "constants": [], "features": ["icn", "<0", "==", "++", "-1", ">="]}, {"string": " ma = j ;", "links": [39], "variables": ["j"], "ids": ["lp", "if", "lp", "lp", "if", "if"], "nodeId": 40, "featuresSelf": [], "operators": [], "constants": [], "features": ["++", "==", "icn", "<0", ">="]}, {"string": " c = 1 ;", "links": [], "variables": [], "ids": ["lp", "if", "lp", "lp", "if", "if"], "nodeId": 41, "featuresSelf": ["1"], "operators": [], "constants": ["1"], "features": ["1"]}, {"string": " break ;", "links": [], "variables": [], "ids": ["lp", "if", "lp", "lp", "if", "if"], "nodeId": 42, "featuresSelf": ["break"], "operators": [], "constants": [], "features": ["break"]}, {"string": " c == 0 )", "links": [41], "variables": ["c"], "ids": ["lp", "if", "lp"], "nodeId": 43, "featuresSelf": ["icn", "==0"], "operators": ["=="], "constants": ["0"], "features": ["1", "icn", "==0"]}, {"string": " k = 0 ;", "links": [], "variables": [], "ids": ["lp", "if", "lp", "if"], "nodeId": 44, "featuresSelf": ["0"], "operators": [], "constants": ["0"], "features": ["0"]}, {"string": " break ;", "links": [], "variables": [], "ids": ["lp", "if", "lp", "if"], "nodeId": 45, "featuresSelf": ["break"], "operators": [], "constants": [], "features": ["break"]}, {"string": " k == 0 )", "links": [44], "variables": ["k"], "ids": ["lp", "if"], "nodeId": 46, "featuresSelf": ["icn", "out", "icn", "out", "==1", "==YES\\n)", "==0", "==NO\\n)", "==1", "==YES\\n)", "==0", "==NO\\n)"], "operators": ["==", "=="], "constants": ["1", "YES\\n)", "0", "NO\\n)"], "features": [">YES\\n)", ">0", "==NO\\n)", ">NO\\n)", "out", "icn", "==1", "==0", "0", "==YES\\n)", ">1"]}]}