{"nodes": [{"string": "T;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["T"], "ids": [], "nodeId": 1, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " T > 0", "links": [], "variables": ["T"], "ids": [], "nodeId": 2, "featuresSelf": ["cn", "loop"], "operators": [">"], "constants": ["0"], "features": []}, {"string": "long;", "links": [], "variables": ["long"], "ids": ["lp"], "nodeId": 3, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["L", "R"], "ids": ["lp"], "nodeId": 4, "featuresSelf": ["in"], "operators": ["&", "&"], "constants": ["%lld%lld"], "features": []}, {"string": " xor = getXor ( L , R )", "links": [], "variables": ["L", "R", "getXor"], "ids": ["lp"], "nodeId": 5, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " xor % 2 == 0", "links": [7, 8], "variables": [], "ids": ["lp"], "nodeId": 6, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 7, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " xor % 2", "links": [], "variables": ["xor"], "ids": ["lp"], "nodeId": 8, "featuresSelf": ["out", "out"], "operators": ["%"], "constants": ["2", "Even\\n", "Odd\\n"], "features": []}, {"string": " T --", "links": [], "variables": ["T"], "ids": ["lp"], "nodeId": 9, "featuresSelf": [], "operators": ["--"], "constants": [], "features": []}, {"string": " return 0", "links": [], "variables": [], "ids": [], "nodeId": 10, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":", ":1;&;%d", ":1;>;0", "lp:", "lp:2;&;2;&;%lld%lld", "lp:", "lp:0;==;", "lp:0", "lp:1;%;2Even\\nOdd\\n", "lp:1;--;", ":0"], "expr": ["", "1;&;%d", "1;>;0", "", "2;&;2;&;%lld%lld", "", "0;==;", "0", "1;%;2Even\\nOdd\\n", "1;--;", "0"], "basic": ["&", "%d", ">", "0", "loop", "&", "&", "%lld%lld", "==", "0", "%", "2", "Even\\n", "Odd\\n", "--", "0"], "exprDepend": [], "controlContextBC": [":&", ":%d", ":>", ":0", "lp:&", "lp:&", "lp:%lld%lld", "lp:==", "lp:0", "lp:%", "lp:2", "lp:Even\\n", "lp:Odd\\n", "lp:--", ":0"]}]}