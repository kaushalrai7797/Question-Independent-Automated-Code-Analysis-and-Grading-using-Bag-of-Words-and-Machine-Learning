{"nodes": [{"string": " * _p -> _p ++ = _c", "links": [], "variables": ["_c", "_p", "__swbuf"], "ids": [], "nodeId": 0, "featuresSelf": ["icn", "return", "return"], "operators": ["||", "&&", "!=", ">=", ">=", "--", "++", "++"], "constants": ["'\\n'", "0"], "features": []}, {"string": "i;", "links": [], "variables": ["i"], "ids": [], "nodeId": 1, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": "scanf", "links": [], "variables": ["T"], "ids": [], "nodeId": 2, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " while ( T -- )", "links": [], "variables": ["T"], "ids": [], "nodeId": 3, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "N;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 4, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["N", "B"], "ids": ["lp"], "nodeId": 5, "featuresSelf": ["in"], "operators": ["&", "&"], "constants": ["%d%d"], "features": []}, {"string": "W;", "links": [], "variables": ["W", "N", "["], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " i < N", "links": [], "variables": ["N", "i"], "ids": ["lp"], "nodeId": 7, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 8, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i", "W", "H", "P"], "ids": ["lp", "lp"], "nodeId": 9, "featuresSelf": ["in"], "operators": ["++", "&", "&", "&"], "constants": ["%d%d%d"], "features": []}, {"string": " i < N", "links": [], "variables": ["N", "i"], "ids": ["lp"], "nodeId": 10, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 11, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 12, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " P [ i ] <= B", "links": [], "variables": ["B", "P", "i"], "ids": ["lp", "lp"], "nodeId": 13, "featuresSelf": ["icn"], "operators": ["<="], "constants": [], "features": []}, {"string": " W [ i ] * H [ i ]", "links": [], "variables": ["a", "H", "i", "W"], "ids": ["lp", "lp", "if"], "nodeId": 14, "featuresSelf": [], "operators": ["*"], "constants": [], "features": []}, {"string": " max = a", "links": [], "variables": ["max", "a"], "ids": ["lp", "lp", "if"], "nodeId": 15, "featuresSelf": ["icn"], "operators": [">"], "constants": [], "features": []}, {"string": " max == 0", "links": [], "variables": ["max"], "ids": ["lp"], "nodeId": 16, "featuresSelf": ["icn", "out", "out"], "operators": ["=="], "constants": ["0", "notablet", "%d\\n"], "features": []}], "features": [{"controlContextEC": [":3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", ":3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", ":0", ":1;&;%d", ":1;--;", "lp:", "lp:2;&;2;&;%d%d", "lp:0", "lp:2;<;0", "lp:", "lplp:4;++;4;&;4;&;4;&;%d%d%d", "lp:2;<;0", "lp:", "lplp:1;++;", "lplp:3;<=;", "lplpif:4;*;", "lplpif:2;>;", "lp:1;==;0notablet%d\\n"], "expr": ["3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", "3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", "0", "1;&;%d", "1;--;", "", "2;&;2;&;%d%d", "0", "2;<;0", "", "4;++;4;&;4;&;4;&;%d%d%d", "2;<;0", "", "1;++;", "3;<=;", "4;*;", "2;>;", "1;==;0notablet%d\\n"], "basic": ["||", "&&", "!=", ">=", ">=", "--", "++", "++", "'\\n'", "0", "||", "&&", "!=", ">=", ">=", "--", "++", "++", "'\\n'", "0", "0", "&", "%d", "--", "loop", "&", "&", "%d%d", "0", "<", "0", "loop", "++", "&", "&", "&", "%d%d%d", "<", "0", "loop", "++", "<=", "*", ">", "==", "0", "notablet", "%d\\n"], "exprDepend": ["0#2;<;0", "0#2;<;0", "2;<;0#2;<;0", "4;++;4;&;4;&;4;&;%d%d%d#2;<;0"], "controlContextBC": [":||", ":&&", ":!=", ":>=", ":>=", ":--", ":++", ":++", ":'\\n'", ":0", ":||", ":&&", ":!=", ":>=", ":>=", ":--", ":++", ":++", ":'\\n'", ":0", ":0", ":&", ":%d", ":--", "lp:&", "lp:&", "lp:%d%d", "lp:0", "lp:<", "lp:0", "lplp:++", "lplp:&", "lplp:&", "lplp:&", "lplp:%d%d%d", "lp:<", "lp:0", "lplp:++", "lplp:<=", "lplpif:*", "lplpif:>", "lp:==", "lp:0", "lp:notablet", "lp:%d\\n"]}]}