{"nodes": [{"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 1, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " i < t", "links": [], "variables": ["i", "t"], "ids": [], "nodeId": 2, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": [], "nodeId": 3, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp"], "nodeId": 4, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "n;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 5, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "arr;", "links": [], "variables": ["arr", "n"], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": [], "constants": ["2"], "features": []}, {"string": " j < 2", "links": [], "variables": ["j"], "ids": ["lp"], "nodeId": 7, "featuresSelf": [], "operators": ["<"], "constants": ["0", "2"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 8, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["j"], "ids": ["lp", "lp"], "nodeId": 9, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " k < n", "links": [], "variables": ["k", "n"], "ids": ["lp", "lp"], "nodeId": 10, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 11, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["k", "arr", "j"], "ids": ["lp", "lp", "lp"], "nodeId": 12, "featuresSelf": ["in"], "operators": ["++", "&"], "constants": ["%c"], "features": []}, {"string": "ind1;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 13, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " j < 2", "links": [], "variables": ["j"], "ids": ["lp"], "nodeId": 14, "featuresSelf": [], "operators": ["<"], "constants": ["0", "2"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 15, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["j"], "ids": ["lp", "lp"], "nodeId": 16, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " k < n", "links": [], "variables": ["k", "n"], "ids": ["lp", "lp"], "nodeId": 17, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 18, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["k"], "ids": ["lp", "lp", "lp"], "nodeId": 19, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " arr [ j ] [ k ] == '#'", "links": [], "variables": ["arr", "j", "k"], "ids": ["lp", "lp", "lp"], "nodeId": 20, "featuresSelf": ["icn"], "operators": ["=="], "constants": ["'#'"], "features": []}, {"string": " ind1 = j", "links": [], "variables": ["j"], "ids": ["lp", "lp", "lp", "if"], "nodeId": 21, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " ind2 = k", "links": [], "variables": ["k"], "ids": ["lp", "lp", "lp", "if"], "nodeId": 22, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " break", "links": [], "variables": [], "ids": ["lp", "lp", "lp", "if"], "nodeId": 23, "featuresSelf": ["break"], "operators": [], "constants": [], "features": []}, {"string": " arr [ ind1 ] [ ind2 ] == '#'", "links": [], "variables": ["arr", "ind1", "ind2"], "ids": ["lp"], "nodeId": 24, "featuresSelf": ["cn", "loop"], "operators": ["=="], "constants": ["'#'"], "features": []}, {"string": " arr [ ind1 + 1 ] [ ind2 ] == '#'", "links": [26, 27], "variables": [], "ids": ["lp", "lp"], "nodeId": 25, "featuresSelf": ["icn"], "operators": ["&&", "=="], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 26, "featuresSelf": [], "operators": [], "constants": ["'#'"], "features": []}, {"string": " arr [ ind1 - 1 ] [ ind2 ] == '#'", "links": [28, 29], "variables": ["arr", "ind1", "ind2"], "ids": ["lp", "lp"], "nodeId": 27, "featuresSelf": ["icn"], "operators": ["+", "==", "++", "&&", "=="], "constants": ["1", "0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 28, "featuresSelf": [], "operators": [], "constants": ["'#'"], "features": []}, {"string": " arr [ ind1 ] [ ind2 + 1 ] == '#'", "links": [30, 31], "variables": ["arr", "ind1", "ind2"], "ids": ["lp", "lp"], "nodeId": 29, "featuresSelf": ["icn"], "operators": ["-", "==", "--", "&&", "=="], "constants": ["1", "1"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 30, "featuresSelf": [], "operators": [], "constants": ["'#'"], "features": []}, {"string": " ind2 != n - 1", "links": [32, 33], "variables": ["arr", "ind1", "ind2"], "ids": ["lp", "lp"], "nodeId": 31, "featuresSelf": [], "operators": ["+", "!="], "constants": ["1"], "features": []}, {"string": " n - 1", "links": [], "variables": ["n"], "ids": ["lp", "lp"], "nodeId": 32, "featuresSelf": [], "operators": ["-"], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": ["ind2"], "ids": ["lp", "lp"], "nodeId": 33, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "flag;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 34, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " j < 1", "links": [], "variables": ["j"], "ids": ["lp"], "nodeId": 35, "featuresSelf": [], "operators": ["<"], "constants": ["0", "1"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 36, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["j"], "ids": ["lp", "lp"], "nodeId": 37, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " k < n", "links": [], "variables": ["k", "ind2", "n"], "ids": ["lp", "lp"], "nodeId": 38, "featuresSelf": [], "operators": ["+", "<"], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 39, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["k"], "ids": ["lp", "lp", "lp"], "nodeId": 40, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " arr [ j ] [ k ] == '#'", "links": [], "variables": ["arr", "j", "k"], "ids": ["lp", "lp", "lp"], "nodeId": 41, "featuresSelf": ["icn"], "operators": ["=="], "constants": ["'#'"], "features": []}, {"string": " flag = 0", "links": [], "variables": [], "ids": ["lp", "lp", "lp", "if"], "nodeId": 42, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " break", "links": [], "variables": [], "ids": ["lp", "lp", "lp", "if"], "nodeId": 43, "featuresSelf": ["break"], "operators": [], "constants": [], "features": []}, {"string": " flag = 1", "links": [], "variables": [], "ids": ["lp", "lp", "lp"], "nodeId": 44, "featuresSelf": [], "operators": [], "constants": ["1"], "features": []}, {"string": " flag == 0", "links": [], "variables": ["flag"], "ids": ["lp"], "nodeId": 45, "featuresSelf": ["icn", "out", "out"], "operators": ["=="], "constants": ["0", "no\\n", "yes\\n"], "features": []}, {"string": " return 0", "links": [], "variables": [], "ids": [], "nodeId": 46, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":", ":1;&;%d", ":2;<;0", ":", "lp:1;++;", "lp:", "lp:2", "lp:1;<;02", "lp:", "lplp:1;++;", "lplp:2;<;0", "lplp:", "lplplp:3;++;3;&;%c", "lp:", "lp:1;<;02", "lp:", "lplp:1;++;", "lplp:2;<;0", "lplp:", "lplplp:1;++;", "lplplp:3;==;'#'", "lplplpif:", "lplplpif:", "lplplpif:", "lp:3;==;'#'", "lplp:0;&&;0;==;", "lplp:'#'", "lplp:3;+;3;==;3;++;3;&&;3;==;10", "lplp:'#'", "lplp:3;-;3;==;3;--;3;&&;3;==;11", "lplp:'#'", "lplp:3;+;3;!=;1", "lplp:1;-;1", "lplp:1;++;", "lp:", "lp:1;<;01", "lp:", "lplp:1;++;", "lplp:3;+;3;<;1", "lplp:", "lplplp:1;++;", "lplplp:3;==;'#'", "lplplpif:0", "lplplpif:", "lplplp:1", "lp:1;==;0no\\nyes\\n", ":0"], "expr": ["", "1;&;%d", "2;<;0", "", "1;++;", "", "2", "1;<;02", "", "1;++;", "2;<;0", "", "3;++;3;&;%c", "", "1;<;02", "", "1;++;", "2;<;0", "", "1;++;", "3;==;'#'", "", "", "", "3;==;'#'", "0;&&;0;==;", "'#'", "3;+;3;==;3;++;3;&&;3;==;10", "'#'", "3;-;3;==;3;--;3;&&;3;==;11", "'#'", "3;+;3;!=;1", "1;-;1", "1;++;", "", "1;<;01", "", "1;++;", "3;+;3;<;1", "", "1;++;", "3;==;'#'", "0", "", "1", "1;==;0no\\nyes\\n", "0"], "basic": ["&", "%d", "<", "0", "loop", "++", "2", "<", "0", "2", "loop", "++", "<", "0", "loop", "++", "&", "%c", "<", "0", "2", "loop", "++", "<", "0", "loop", "++", "==", "'#'", "==", "'#'", "loop", "&&", "==", "'#'", "+", "==", "++", "&&", "==", "1", "0", "'#'", "-", "==", "--", "&&", "==", "1", "1", "'#'", "+", "!=", "1", "-", "1", "++", "<", "0", "1", "loop", "++", "+", "<", "1", "loop", "++", "==", "'#'", "0", "1", "==", "0", "no\\n", "yes\\n", "0"], "exprDepend": [], "controlContextBC": [":&", ":%d", ":<", ":0", "lp:++", "lp:2", "lp:<", "lp:0", "lp:2", "lplp:++", "lplp:<", "lplp:0", "lplplp:++", "lplplp:&", "lplplp:%c", "lp:<", "lp:0", "lp:2", "lplp:++", "lplp:<", "lplp:0", "lplplp:++", "lplplp:==", "lplplp:'#'", "lp:==", "lp:'#'", "lplp:&&", "lplp:==", "lplp:'#'", "lplp:+", "lplp:==", "lplp:++", "lplp:&&", "lplp:==", "lplp:1", "lplp:0", "lplp:'#'", "lplp:-", "lplp:==", "lplp:--", "lplp:&&", "lplp:==", "lplp:1", "lplp:1", "lplp:'#'", "lplp:+", "lplp:!=", "lplp:1", "lplp:-", "lplp:1", "lplp:++", "lp:<", "lp:0", "lp:1", "lplp:++", "lplp:+", "lplp:<", "lplp:1", "lplplp:++", "lplplp:==", "lplplp:'#'", "lplplpif:0", "lplplp:1", "lp:==", "lp:0", "lp:no\\n", "lp:yes\\n", ":0"]}]}