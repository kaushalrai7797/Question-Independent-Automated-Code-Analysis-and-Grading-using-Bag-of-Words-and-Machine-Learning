{"nodes": [{"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 1, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " while ( t -- )", "links": [], "variables": ["t"], "ids": [], "nodeId": 2, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 3, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": "getchar", "links": [], "variables": ["getchar"], "ids": ["lp"], "nodeId": 4, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "a;", "links": [], "variables": ["a", "n"], "ids": ["lp"], "nodeId": 5, "featuresSelf": [], "operators": [], "constants": ["2"], "features": []}, {"string": "headi;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": [], "constants": ["0", "0", "0"], "features": []}, {"string": " i < 2", "links": [], "variables": ["i"], "ids": ["lp"], "nodeId": 7, "featuresSelf": [], "operators": ["<"], "constants": ["0", "2"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 8, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 9, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " j < n", "links": [], "variables": ["n", "j"], "ids": ["lp", "lp"], "nodeId": 10, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 11, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["j"], "ids": ["lp", "lp", "lp"], "nodeId": 12, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " a [ i ] [ j ] = getchar ( )", "links": [], "variables": ["getchar"], "ids": ["lp", "lp", "lp"], "nodeId": 13, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " a [ i ] [ j ] == '#'", "links": [], "variables": ["a", "i", "j", "btotal"], "ids": ["lp", "lp", "lp"], "nodeId": 14, "featuresSelf": ["icn"], "operators": ["==", "++"], "constants": ["'#'"], "features": []}, {"string": "getchar", "links": [], "variables": ["getchar"], "ids": ["lp", "lp"], "nodeId": 15, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "Implicit Cast", "links": [], "variables": ["btotal"], "ids": ["lp"], "nodeId": 16, "featuresSelf": ["icn"], "operators": [], "constants": [], "features": []}, {"string": " headi = 0", "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 17, "featuresSelf": [], "operators": [","], "constants": ["0", "0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 18, "featuresSelf": ["cn", "loop"], "operators": [], "constants": ["1"], "features": []}, {"string": " a [ headi ] [ headj ] != '#'", "links": [], "variables": ["headUpdate", "a", "headi", "headj"], "ids": ["lp", "if", "lp"], "nodeId": 19, "featuresSelf": ["cn", "loop"], "operators": ["||", "!="], "constants": ["'#'"], "features": []}, {"string": " headi == 0", "links": [], "variables": ["headi"], "ids": ["lp", "if", "lp", "lp"], "nodeId": 20, "featuresSelf": ["icn"], "operators": ["==", "++"], "constants": ["0"], "features": []}, {"string": " headi --", "links": [], "variables": ["headi"], "ids": ["lp", "if", "lp", "lp"], "nodeId": 21, "featuresSelf": [], "operators": ["--"], "constants": [], "features": []}, {"string": " headj ++", "links": [], "variables": ["headj"], "ids": ["lp", "if", "lp", "lp"], "nodeId": 22, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " headUpdate = 0", "links": [], "variables": [], "ids": ["lp", "if", "lp", "lp"], "nodeId": 23, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " headj >= n", "links": [], "variables": ["n", "headj"], "ids": ["lp", "if", "lp"], "nodeId": 24, "featuresSelf": ["icn", "break"], "operators": [">="], "constants": [], "features": []}, {"string": " i = headi", "links": [], "variables": ["headi", "headj"], "ids": ["lp", "if", "lp"], "nodeId": 25, "featuresSelf": [], "operators": [",", "-", ",", ",", ","], "constants": ["1", "1"], "features": []}, {"string": " while ( 1 )", "links": [], "variables": [], "ids": ["lp", "if", "lp"], "nodeId": 26, "featuresSelf": ["cn", "loop"], "operators": [], "constants": ["1"], "features": []}, {"string": " a [ i + 1 ] [ j ] == '#'", "links": [28, 29], "variables": ["jprev", "j", "iprev", "i"], "ids": ["lp", "if", "lp", "lp"], "nodeId": 27, "featuresSelf": ["icn"], "operators": ["&&", "&&", "!=", "==", "&&", "=="], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "if", "lp", "lp"], "nodeId": 28, "featuresSelf": [], "operators": [], "constants": ["'#'"], "features": []}, {"string": " i == 0", "links": [], "variables": ["a", "i", "j"], "ids": ["lp", "if", "lp", "lp"], "nodeId": 29, "featuresSelf": [], "operators": ["+", "=="], "constants": ["1", "0"], "features": []}, {"string": " iprev = i", "links": [], "variables": ["i"], "ids": ["lp", "if", "lp", "lp", "if"], "nodeId": 30, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " jprev = j", "links": [], "variables": ["j"], "ids": ["lp", "if", "lp", "lp", "if"], "nodeId": 31, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " i ++", "links": [], "variables": ["i"], "ids": ["lp", "if", "lp", "lp", "if"], "nodeId": 32, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " a [ i - 1 ] [ j ] == '#'", "links": [34, 35], "variables": ["bcnt", "jprev", "j", "iprev", "i"], "ids": ["lp", "if", "lp", "lp", "if"], "nodeId": 33, "featuresSelf": ["icn"], "operators": ["++", "&&", "&&", "!=", "==", "&&", "=="], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "if", "lp", "lp"], "nodeId": 34, "featuresSelf": [], "operators": [], "constants": ["'#'"], "features": []}, {"string": " i == 1", "links": [], "variables": ["a", "i", "j"], "ids": ["lp", "if", "lp", "lp"], "nodeId": 35, "featuresSelf": [], "operators": ["-", "=="], "constants": ["1", "1"], "features": []}, {"string": " iprev = i", "links": [], "variables": ["i"], "ids": ["lp", "if", "lp", "lp", "if"], "nodeId": 36, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " jprev = j", "links": [], "variables": ["j"], "ids": ["lp", "if", "lp", "lp", "if"], "nodeId": 37, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " i --", "links": [], "variables": ["i"], "ids": ["lp", "if", "lp", "lp", "if"], "nodeId": 38, "featuresSelf": [], "operators": ["--"], "constants": [], "features": []}, {"string": " a [ i ] [ j + 1 ] == '#'", "links": [40, 41], "variables": ["bcnt"], "ids": ["lp", "if", "lp", "lp", "if"], "nodeId": 39, "featuresSelf": ["icn"], "operators": ["++", "&&", "=="], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "if", "lp", "lp"], "nodeId": 40, "featuresSelf": [], "operators": [], "constants": ["'#'"], "features": []}, {"string": " j < n - 1", "links": [42, 43], "variables": ["a", "i", "j"], "ids": ["lp", "if", "lp", "lp"], "nodeId": 41, "featuresSelf": [], "operators": ["+", "<"], "constants": ["1"], "features": []}, {"string": " n - 1", "links": [], "variables": ["n"], "ids": ["lp", "if", "lp", "lp"], "nodeId": 42, "featuresSelf": [], "operators": ["-"], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": ["j"], "ids": ["lp", "if", "lp", "lp"], "nodeId": 43, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " iprev = i", "links": [], "variables": ["i"], "ids": ["lp", "if", "lp", "lp", "if"], "nodeId": 44, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " jprev = j", "links": [], "variables": ["j"], "ids": ["lp", "if", "lp", "lp", "if"], "nodeId": 45, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " j ++", "links": [], "variables": ["j"], "ids": ["lp", "if", "lp", "lp", "if"], "nodeId": 46, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " bcnt ++", "links": [], "variables": ["bcnt"], "ids": ["lp", "if", "lp", "lp", "if"], "nodeId": 47, "featuresSelf": ["break"], "operators": ["++"], "constants": [], "features": []}, {"string": " bcnt == btotal", "links": [], "variables": ["btotal", "bcnt"], "ids": ["lp", "if", "lp"], "nodeId": 48, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": " valid = 1", "links": [], "variables": [], "ids": ["lp", "if", "lp", "if"], "nodeId": 49, "featuresSelf": [], "operators": [], "constants": ["1"], "features": []}, {"string": " break", "links": [], "variables": [], "ids": ["lp", "if", "lp", "if"], "nodeId": 50, "featuresSelf": ["break"], "operators": [], "constants": [], "features": []}, {"string": " headUpdate = 1", "links": [], "variables": [], "ids": ["lp", "if", "lp"], "nodeId": 51, "featuresSelf": [], "operators": [], "constants": ["1"], "features": []}, {"string": "Implicit Cast", "links": [], "variables": ["valid"], "ids": ["lp"], "nodeId": 52, "featuresSelf": ["icn", "out", "out"], "operators": [], "constants": ["yes\\n", "no\\n"], "features": []}, {"string": " return 0", "links": [], "variables": [], "ids": [], "nodeId": 53, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":", ":1;&;%d", ":1;--;", "lp:1;&;%d", "lp:", "lp:2", "lp:000", "lp:1;<;02", "lp:", "lplp:1;++;", "lplp:2;<;0", "lplp:", "lplplp:1;++;", "lplplp:", "lplplp:4;==;4;++;'#'", "lplp:", "lp:", "lpif:0;,;00", "lpif:1", "lpiflp:4;||;4;!=;'#'", "lpiflplp:1;==;1;++;0", "lpiflplp:1;--;", "lpiflplp:1;++;", "lpiflplp:0", "lpiflp:2;>=;", "lpiflp:2;,;2;-;2;,;2;,;2;,;11", "lpiflp:1", "lpiflplp:4;&&;4;&&;4;!=;4;==;4;&&;4;==;", "lpiflplp:'#'", "lpiflplp:3;+;3;==;10", "lpiflplpif:", "lpiflplpif:", "lpiflplpif:1;++;", "lpiflplpif:5;++;5;&&;5;&&;5;!=;5;==;5;&&;5;==;", "lpiflplp:'#'", "lpiflplp:3;-;3;==;11", "lpiflplpif:", "lpiflplpif:", "lpiflplpif:1;--;", "lpiflplpif:1;++;1;&&;1;==;", "lpiflplp:'#'", "lpiflplp:3;+;3;<;1", "lpiflplp:1;-;1", "lpiflplp:", "lpiflplpif:", "lpiflplpif:", "lpiflplpif:1;++;", "lpiflplpif:1;++;", "lpiflp:2;==;", "lpiflpif:1", "lpiflpif:", "lpiflp:1", "lp:yes\\nno\\n", ":0"], "expr": ["", "1;&;%d", "1;--;", "1;&;%d", "", "2", "000", "1;<;02", "", "1;++;", "2;<;0", "", "1;++;", "", "4;==;4;++;'#'", "", "", "0;,;00", "1", "4;||;4;!=;'#'", "1;==;1;++;0", "1;--;", "1;++;", "0", "2;>=;", "2;,;2;-;2;,;2;,;2;,;11", "1", "4;&&;4;&&;4;!=;4;==;4;&&;4;==;", "'#'", "3;+;3;==;10", "", "", "1;++;", "5;++;5;&&;5;&&;5;!=;5;==;5;&&;5;==;", "'#'", "3;-;3;==;11", "", "", "1;--;", "1;++;1;&&;1;==;", "'#'", "3;+;3;<;1", "1;-;1", "", "", "", "1;++;", "1;++;", "2;==;", "1", "", "1", "yes\\nno\\n", "0"], "basic": ["&", "%d", "--", "loop", "&", "%d", "2", "0", "0", "0", "<", "0", "2", "loop", "++", "<", "0", "loop", "++", "==", "++", "'#'", ",", "0", "0", "1", "loop", "||", "!=", "'#'", "loop", "==", "++", "0", "--", "++", "0", ">=", ",", "-", ",", ",", ",", "1", "1", "1", "loop", "&&", "&&", "!=", "==", "&&", "==", "'#'", "+", "==", "1", "0", "++", "++", "&&", "&&", "!=", "==", "&&", "==", "'#'", "-", "==", "1", "1", "--", "++", "&&", "==", "'#'", "+", "<", "1", "-", "1", "++", "++", "==", "1", "1", "yes\\n", "no\\n", "0"], "exprDepend": ["2#", "1;<;02#", "1;++;#", "2;<;0#", "1;++;#", "4;||;4;!=;'#'#0", "2;<;0#2;,;2;-;2;,;2;,;2;,;11", "1;++;#2;,;2;-;2;,;2;,;2;,;11", "4;==;4;++;'#'#2;,;2;-;2;,;2;,;2;,;11", "1;<;02#2;,;2;-;2;,;2;,;2;,;11", "1;++;#2;,;2;-;2;,;2;,;2;,;11", "4;==;4;++;'#'#2;,;2;-;2;,;2;,;2;,;11", "4;&&;4;&&;4;!=;4;==;4;&&;4;==;#", "4;&&;4;&&;4;!=;4;==;4;&&;4;==;#", "4;&&;4;&&;4;!=;4;==;4;&&;4;==;#", "5;++;5;&&;5;&&;5;!=;5;==;5;&&;5;==;#", "4;&&;4;&&;4;!=;4;==;4;&&;4;==;#", "5;++;5;&&;5;&&;5;!=;5;==;5;&&;5;==;#", "4;&&;4;&&;4;!=;4;==;4;&&;4;==;#", "5;++;5;&&;5;&&;5;!=;5;==;5;&&;5;==;#", "4;&&;4;&&;4;!=;4;==;4;&&;4;==;#", "5;++;5;&&;5;&&;5;!=;5;==;5;&&;5;==;#", "4;||;4;!=;'#'#1"], "controlContextBC": [":&", ":%d", ":--", "lp:&", "lp:%d", "lp:2", "lp:0", "lp:0", "lp:0", "lp:<", "lp:0", "lp:2", "lplp:++", "lplp:<", "lplp:0", "lplplp:++", "lplplp:==", "lplplp:++", "lplplp:'#'", "lpif:,", "lpif:0", "lpif:0", "lpif:1", "lpiflp:||", "lpiflp:!=", "lpiflp:'#'", "lpiflplp:==", "lpiflplp:++", "lpiflplp:0", "lpiflplp:--", "lpiflplp:++", "lpiflplp:0", "lpiflp:>=", "lpiflp:,", "lpiflp:-", "lpiflp:,", "lpiflp:,", "lpiflp:,", "lpiflp:1", "lpiflp:1", "lpiflp:1", "lpiflplp:&&", "lpiflplp:&&", "lpiflplp:!=", "lpiflplp:==", "lpiflplp:&&", "lpiflplp:==", "lpiflplp:'#'", "lpiflplp:+", "lpiflplp:==", "lpiflplp:1", "lpiflplp:0", "lpiflplpif:++", "lpiflplpif:++", "lpiflplpif:&&", "lpiflplpif:&&", "lpiflplpif:!=", "lpiflplpif:==", "lpiflplpif:&&", "lpiflplpif:==", "lpiflplp:'#'", "lpiflplp:-", "lpiflplp:==", "lpiflplp:1", "lpiflplp:1", "lpiflplpif:--", "lpiflplpif:++", "lpiflplpif:&&", "lpiflplpif:==", "lpiflplp:'#'", "lpiflplp:+", "lpiflplp:<", "lpiflplp:1", "lpiflplp:-", "lpiflplp:1", "lpiflplpif:++", "lpiflplpif:++", "lpiflp:==", "lpiflpif:1", "lpiflp:1", "lp:yes\\n", "lp:no\\n", ":0"]}]}