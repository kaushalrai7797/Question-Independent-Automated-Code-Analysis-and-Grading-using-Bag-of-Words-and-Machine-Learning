{"nodes": [{"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": "*;", "links": [], "variables": ["*"], "ids": [], "nodeId": 1, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "long;", "links": [], "variables": ["long"], "ids": [], "nodeId": 2, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 3, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " t -- > 0", "links": [], "variables": ["t"], "ids": [], "nodeId": 4, "featuresSelf": ["cn", "loop"], "operators": [">", "--"], "constants": ["0"], "features": []}, {"string": "scanf", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 5, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": "scanf", "links": [], "variables": ["a"], "ids": ["lp"], "nodeId": 6, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " sizeof ( int ) * a", "links": [], "variables": ["malloc", "a"], "ids": ["lp"], "nodeId": 7, "featuresSelf": [], "operators": ["*"], "constants": [], "features": []}, {"string": " sum = 0", "links": [], "variables": [], "ids": ["lp"], "nodeId": 8, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " i < a", "links": [], "variables": ["a", "i"], "ids": ["lp"], "nodeId": 9, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 10, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 11, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " m + i", "links": [], "variables": ["i", "m"], "ids": ["lp", "lp"], "nodeId": 12, "featuresSelf": ["in"], "operators": ["+"], "constants": ["%d"], "features": []}, {"string": " sum + m [ i ]", "links": [], "variables": ["m", "i", "sum"], "ids": ["lp", "lp"], "nodeId": 13, "featuresSelf": [], "operators": ["+"], "constants": [], "features": []}, {"string": " ( n * ( n + 1 ) ) / 2 - sum", "links": [15, 16], "variables": [], "ids": ["lp"], "nodeId": 14, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["sum"], "ids": ["lp"], "nodeId": 15, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " ( n * ( n + 1 ) ) / 2", "links": [17, 18], "variables": [], "ids": ["lp"], "nodeId": 16, "featuresSelf": [], "operators": ["/"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 17, "featuresSelf": [], "operators": [], "constants": ["2"], "features": []}, {"string": " n * ( n + 1 )", "links": [19, 20], "variables": [], "ids": ["lp"], "nodeId": 18, "featuresSelf": [], "operators": ["*"], "constants": [], "features": []}, {"string": " n + 1", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 19, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 20, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["p"], "ids": ["lp"], "nodeId": 21, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " n % 2 == 0", "links": [23, 24], "variables": [], "ids": ["lp"], "nodeId": 22, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 23, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " ( n + 1 ) / 2", "links": [25, 26], "variables": ["n"], "ids": ["lp"], "nodeId": 24, "featuresSelf": [], "operators": ["%", "/", "/"], "constants": ["2", "2"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 25, "featuresSelf": [], "operators": [], "constants": ["2"], "features": []}, {"string": " n + 1", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 26, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": " ( double ) sum * ( n - p ) / n", "links": [28, 29], "variables": ["res"], "ids": ["lp"], "nodeId": 27, "featuresSelf": [], "operators": ["/"], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 28, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " ( double ) sum * ( n - p )", "links": [30, 31], "variables": [], "ids": ["lp"], "nodeId": 29, "featuresSelf": [], "operators": ["*"], "constants": [], "features": []}, {"string": " n - p", "links": [], "variables": ["p", "n"], "ids": ["lp"], "nodeId": 30, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["sum"], "ids": ["lp"], "nodeId": 31, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "printf", "links": [], "variables": ["res"], "ids": ["lp"], "nodeId": 32, "featuresSelf": ["out"], "operators": [], "constants": ["%.4lf\\n"], "features": []}, {"string": "free", "links": [], "variables": ["m", "free"], "ids": ["lp"], "nodeId": 33, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " return 0", "links": [], "variables": [], "ids": [], "nodeId": 34, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":0", ":", ":0", ":1;&;%d", ":1;>;1;--;0", "lp:1;&;%d", "lp:1;&;%d", "lp:2;*;", "lp:0", "lp:2;<;0", "lp:", "lplp:1;++;", "lplp:2;+;%d", "lplp:3;+;", "lp:0;-;", "lp:", "lp:0;/;", "lp:2", "lp:0;*;", "lp:1;+;1", "lp:", "lp:1;&;%d", "lp:0;==;", "lp:0", "lp:1;%;1;/;1;/;22", "lp:2", "lp:1;+;1", "lp:1;/;", "lp:", "lp:0;*;", "lp:2;-;", "lp:", "lp:%.4lf\\n", "lp:", ":0"], "expr": ["0", "", "0", "1;&;%d", "1;>;1;--;0", "1;&;%d", "1;&;%d", "2;*;", "0", "2;<;0", "", "1;++;", "2;+;%d", "3;+;", "0;-;", "", "0;/;", "2", "0;*;", "1;+;1", "", "1;&;%d", "0;==;", "0", "1;%;1;/;1;/;22", "2", "1;+;1", "1;/;", "", "0;*;", "2;-;", "", "%.4lf\\n", "", "0"], "basic": ["0", "0", "&", "%d", ">", "--", "0", "loop", "&", "%d", "&", "%d", "*", "0", "<", "0", "loop", "++", "+", "%d", "+", "-", "/", "2", "*", "+", "1", "&", "%d", "==", "0", "%", "/", "/", "2", "2", "2", "+", "1", "/", "*", "-", "%.4lf\\n", "0"], "exprDepend": ["3;+;#0;-;", "1;&;%d#1;%;1;/;1;/;22", "1;+;1#1;%;1;/;1;/;22", "#1;%;1;/;1;/;22"], "controlContextBC": [":0", ":0", ":&", ":%d", ":>", ":--", ":0", "lp:&", "lp:%d", "lp:&", "lp:%d", "lp:*", "lp:0", "lp:<", "lp:0", "lplp:++", "lplp:+", "lplp:%d", "lplp:+", "lp:-", "lp:/", "lp:2", "lp:*", "lp:+", "lp:1", "lp:&", "lp:%d", "lp:==", "lp:0", "lp:%", "lp:/", "lp:/", "lp:2", "lp:2", "lp:2", "lp:+", "lp:1", "lp:/", "lp:*", "lp:-", "lp:%.4lf\\n", ":0"]}]}