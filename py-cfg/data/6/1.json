{"nodes": [{"string": "n;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " int prime ( int x )", "links": [], "variables": [], "ids": [], "nodeId": 1, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["n"], "ids": [], "nodeId": 2, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " n -- > 0", "links": [], "variables": ["n"], "ids": [], "nodeId": 3, "featuresSelf": ["cn", "loop"], "operators": [">", "--"], "constants": ["0"], "features": []}, {"string": "A;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 4, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["A", "B", "K"], "ids": ["lp"], "nodeId": 5, "featuresSelf": ["in"], "operators": ["&", "&", "&"], "constants": ["%d%d%d"], "features": []}, {"string": "k;", "links": [], "variables": ["k"], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " i <= B", "links": [], "variables": ["i", "A", "B"], "ids": ["lp"], "nodeId": 7, "featuresSelf": [], "operators": ["<="], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 8, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 9, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "j;", "links": [], "variables": ["j"], "ids": ["lp", "lp"], "nodeId": 10, "featuresSelf": [], "operators": [], "constants": ["2"], "features": []}, {"string": "count;", "links": [], "variables": ["count"], "ids": ["lp", "lp"], "nodeId": 11, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " j <= i", "links": [], "variables": ["i", "j"], "ids": ["lp", "lp"], "nodeId": 12, "featuresSelf": ["cn", "loop"], "operators": ["<="], "constants": [], "features": []}, {"string": " i % j == 0", "links": [14, 15], "variables": [], "ids": ["lp", "lp", "lp"], "nodeId": 13, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp", "lp"], "nodeId": 14, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " i % j", "links": [], "variables": ["j", "i"], "ids": ["lp", "lp", "lp"], "nodeId": 15, "featuresSelf": [], "operators": ["%"], "constants": [], "features": []}, {"string": " prime ( j ) == 1", "links": [], "variables": ["j", "prime"], "ids": ["lp", "lp", "lp", "if"], "nodeId": 16, "featuresSelf": ["icn"], "operators": ["=="], "constants": ["1"], "features": []}, {"string": " count ++", "links": [], "variables": ["count"], "ids": ["lp", "lp", "lp", "if", "if"], "nodeId": 17, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " j ++", "links": [], "variables": ["j"], "ids": ["lp", "lp", "lp"], "nodeId": 18, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " count == K", "links": [], "variables": ["K", "count", "k"], "ids": ["lp", "lp"], "nodeId": 19, "featuresSelf": ["icn"], "operators": ["==", "++"], "constants": [], "features": []}, {"string": "printf", "links": [], "variables": ["k"], "ids": ["lp"], "nodeId": 20, "featuresSelf": ["out"], "operators": [], "constants": ["%d\\n"], "features": []}, {"string": " return 0", "links": [], "variables": [], "ids": [], "nodeId": 21, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":", ":", ":1;&;%d", ":1;>;1;--;0", "lp:", "lp:3;&;3;&;3;&;%d%d%d", "lp:0", "lp:3;<=;", "lp:", "lplp:1;++;", "lplp:2", "lplp:0", "lplp:2;<=;", "lplplp:0;==;", "lplplp:0", "lplplp:2;%;", "lplplpif:2;==;1", "lplplpifif:1;++;", "lplplp:1;++;", "lplp:3;==;3;++;", "lp:%d\\n", ":0"], "expr": ["", "", "1;&;%d", "1;>;1;--;0", "", "3;&;3;&;3;&;%d%d%d", "0", "3;<=;", "", "1;++;", "2", "0", "2;<=;", "0;==;", "0", "2;%;", "2;==;1", "1;++;", "1;++;", "3;==;3;++;", "%d\\n", "0"], "basic": ["&", "%d", ">", "--", "0", "loop", "&", "&", "&", "%d%d%d", "0", "<=", "loop", "++", "2", "0", "<=", "loop", "==", "0", "%", "==", "1", "++", "++", "==", "++", "%d\\n", "0"], "exprDepend": [], "controlContextBC": [":&", ":%d", ":>", ":--", ":0", "lp:&", "lp:&", "lp:&", "lp:%d%d%d", "lp:0", "lp:<=", "lplp:++", "lplp:2", "lplp:0", "lplp:<=", "lplplp:==", "lplplp:0", "lplplp:%", "lplplpif:==", "lplplpif:1", "lplplpifif:++", "lplplp:++", "lplp:==", "lplp:++", "lp:%d\\n", ":0"]}]}