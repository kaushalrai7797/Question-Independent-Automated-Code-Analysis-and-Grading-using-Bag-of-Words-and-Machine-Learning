{"nodes": [{"string": " * _p -> _p ++ = _c", "links": [], "variables": ["_c", "_p", "__swbuf"], "ids": [], "nodeId": 0, "featuresSelf": ["icn", "return", "return"], "operators": ["||", "&&", "!=", ">=", ">=", "--", "++", "++"], "constants": ["'\\n'", "0"], "features": []}, {"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 1, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 2, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " while ( t -- )", "links": [], "variables": ["t"], "ids": [], "nodeId": 3, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["x", "y"], "ids": ["lp"], "nodeId": 4, "featuresSelf": ["in"], "operators": ["&", "&"], "constants": ["%d%d"], "features": []}, {"string": " x >= y", "links": [], "variables": ["x", "y"], "ids": ["lp"], "nodeId": 5, "featuresSelf": ["cn", "loop"], "operators": ["||", ">=", ">="], "constants": [], "features": []}, {"string": " x == y", "links": [], "variables": ["y", "x"], "ids": ["lp", "lp"], "nodeId": 6, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": " x + y", "links": [], "variables": ["y", "x"], "ids": ["lp", "lp", "if"], "nodeId": 7, "featuresSelf": ["out"], "operators": ["+"], "constants": ["%d\\n"], "features": []}, {"string": " x > y", "links": [], "variables": ["y", "x"], "ids": ["lp", "lp", "if"], "nodeId": 8, "featuresSelf": ["break", "icn"], "operators": [">"], "constants": [], "features": []}, {"string": " x - y", "links": [], "variables": ["y", "x"], "ids": ["lp", "lp", "if"], "nodeId": 9, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": " x == y", "links": [], "variables": ["y", "x"], "ids": ["lp", "lp", "if"], "nodeId": 10, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": " x + y", "links": [], "variables": ["y", "x"], "ids": ["lp", "lp", "if", "if"], "nodeId": 11, "featuresSelf": ["out"], "operators": ["+"], "constants": ["%d\\n"], "features": []}, {"string": " break", "links": [], "variables": [], "ids": ["lp", "lp", "if", "if"], "nodeId": 12, "featuresSelf": ["break"], "operators": [], "constants": [], "features": []}, {"string": " y - x", "links": [], "variables": ["x", "y"], "ids": ["lp", "lp"], "nodeId": 13, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": " x == y", "links": [], "variables": ["y", "x"], "ids": ["lp", "lp"], "nodeId": 14, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": " x + y", "links": [], "variables": ["y", "x"], "ids": ["lp", "lp", "if"], "nodeId": 15, "featuresSelf": ["out"], "operators": ["+"], "constants": ["%d\\n"], "features": []}, {"string": " break", "links": [], "variables": [], "ids": ["lp", "lp", "if"], "nodeId": 16, "featuresSelf": ["break"], "operators": [], "constants": [], "features": []}, {"string": " return 0", "links": [], "variables": [], "ids": [], "nodeId": 17, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", ":3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", ":", ":1;&;%d", ":1;--;", "lp:2;&;2;&;%d%d", "lp:2;||;2;>=;2;>=;", "lplp:2;==;", "lplpif:2;+;%d\\n", "lplpif:2;>;", "lplpif:2;-;", "lplpif:2;==;", "lplpifif:2;+;%d\\n", "lplpifif:", "lplp:2;-;", "lplp:2;==;", "lplpif:2;+;%d\\n", "lplpif:", ":0"], "expr": ["3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", "3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", "", "1;&;%d", "1;--;", "2;&;2;&;%d%d", "2;||;2;>=;2;>=;", "2;==;", "2;+;%d\\n", "2;>;", "2;-;", "2;==;", "2;+;%d\\n", "", "2;-;", "2;==;", "2;+;%d\\n", "", "0"], "basic": ["||", "&&", "!=", ">=", ">=", "--", "++", "++", "'\\n'", "0", "||", "&&", "!=", ">=", ">=", "--", "++", "++", "'\\n'", "0", "&", "%d", "--", "loop", "&", "&", "%d%d", "||", ">=", ">=", "loop", "==", "+", "%d\\n", ">", "-", "==", "+", "%d\\n", "-", "==", "+", "%d\\n", "0"], "exprDepend": ["2;&;2;&;%d%d#2;-;", "2;||;2;>=;2;>=;#2;-;", "2;==;#2;-;", "2;+;%d\\n#2;-;", "2;>;#2;-;", "2;&;2;&;%d%d#2;-;", "2;||;2;>=;2;>=;#2;-;", "2;==;#2;-;", "2;+;%d\\n#2;-;", "2;>;#2;-;", "2;-;#2;-;", "2;==;#2;-;", "2;+;%d\\n#2;-;"], "controlContextBC": [":||", ":&&", ":!=", ":>=", ":>=", ":--", ":++", ":++", ":'\\n'", ":0", ":||", ":&&", ":!=", ":>=", ":>=", ":--", ":++", ":++", ":'\\n'", ":0", ":&", ":%d", ":--", "lp:&", "lp:&", "lp:%d%d", "lp:||", "lp:>=", "lp:>=", "lplp:==", "lplpif:+", "lplpif:%d\\n", "lplpif:>", "lplpif:-", "lplpif:==", "lplpifif:+", "lplpifif:%d\\n", "lplp:-", "lplp:==", "lplpif:+", "lplpif:%d\\n", ":0"]}]}