{"nodes": [{"string": " * _p -> _p ++ = _c", "links": [], "variables": ["_c", "_p", "__swbuf"], "ids": [], "nodeId": 0, "featuresSelf": ["icn", "return", "return"], "operators": ["||", "&&", "!=", ">=", ">=", "--", "++", "++"], "constants": ["'\\n'", "0"], "features": []}, {"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 1, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 2, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " z < t", "links": [], "variables": ["t", "z"], "ids": [], "nodeId": 3, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": [], "nodeId": 4, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["z"], "ids": ["lp"], "nodeId": 5, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "m;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["m", "b"], "ids": ["lp"], "nodeId": 7, "featuresSelf": ["in"], "operators": ["&", "&"], "constants": ["%d%d"], "features": []}, {"string": " m == b", "links": [], "variables": ["b", "m"], "ids": ["lp"], "nodeId": 8, "featuresSelf": ["cn", "loop"], "operators": ["!", "||", "==", "||", "==", "=="], "constants": ["0", "0"], "features": []}, {"string": " b < m", "links": [], "variables": ["m", "b"], "ids": ["lp", "lp"], "nodeId": 9, "featuresSelf": ["icn"], "operators": ["<"], "constants": [], "features": []}, {"string": " m % b == 0", "links": [11, 12], "variables": [], "ids": ["lp", "lp", "if"], "nodeId": 10, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp", "if"], "nodeId": 11, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " m % b", "links": [], "variables": ["b", "m"], "ids": ["lp", "lp", "if"], "nodeId": 12, "featuresSelf": [], "operators": ["%"], "constants": [], "features": []}, {"string": " m = 0", "links": [], "variables": [], "ids": ["lp", "lp", "if", "if"], "nodeId": 13, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " m - b", "links": [], "variables": ["b", "m"], "ids": ["lp", "lp", "if", "if"], "nodeId": 14, "featuresSelf": [], "operators": ["*", "-"], "constants": ["2"], "features": []}, {"string": " b % m == 0", "links": [16, 17], "variables": [], "ids": ["lp", "lp"], "nodeId": 15, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 16, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " b % m", "links": [], "variables": ["m", "b"], "ids": ["lp", "lp"], "nodeId": 17, "featuresSelf": [], "operators": ["%"], "constants": [], "features": []}, {"string": " b = 0", "links": [], "variables": [], "ids": ["lp", "lp", "if"], "nodeId": 18, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " b - m", "links": [], "variables": ["m", "b"], "ids": ["lp", "lp", "if"], "nodeId": 19, "featuresSelf": [], "operators": ["*", "-"], "constants": ["2"], "features": []}, {"string": " m + b", "links": [], "variables": ["b", "m"], "ids": ["lp"], "nodeId": 20, "featuresSelf": ["out"], "operators": ["+"], "constants": ["%lld\\n"], "features": []}], "features": [{"controlContextEC": [":3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", ":3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", ":", ":1;&;%d", ":2;<;0", ":", "lp:1;++;", "lp:", "lp:2;&;2;&;%d%d", "lp:2;!;2;||;2;==;2;||;2;==;2;==;00", "lplp:2;<;", "lplpif:0;==;", "lplpif:0", "lplpif:2;%;", "lplpifif:0", "lplpifif:2;*;2;-;2", "lplp:0;==;", "lplp:0", "lplp:2;%;", "lplpif:0", "lplpif:2;*;2;-;2", "lp:2;+;%lld\\n"], "expr": ["3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", "3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", "", "1;&;%d", "2;<;0", "", "1;++;", "", "2;&;2;&;%d%d", "2;!;2;||;2;==;2;||;2;==;2;==;00", "2;<;", "0;==;", "0", "2;%;", "0", "2;*;2;-;2", "0;==;", "0", "2;%;", "0", "2;*;2;-;2", "2;+;%lld\\n"], "basic": ["||", "&&", "!=", ">=", ">=", "--", "++", "++", "'\\n'", "0", "||", "&&", "!=", ">=", ">=", "--", "++", "++", "'\\n'", "0", "&", "%d", "<", "0", "loop", "++", "&", "&", "%d%d", "!", "||", "==", "||", "==", "==", "0", "0", "loop", "<", "==", "0", "%", "0", "*", "-", "2", "==", "0", "%", "0", "*", "-", "2", "+", "%lld\\n"], "exprDepend": ["2;&;2;&;%d%d#0", "2;!;2;||;2;==;2;||;2;==;2;==;00#0", "2;<;#0", "2;%;#0", "2;&;2;&;%d%d#2;*;2;-;2", "2;!;2;||;2;==;2;||;2;==;2;==;00#2;*;2;-;2", "2;<;#2;*;2;-;2", "2;%;#2;*;2;-;2", "2;&;2;&;%d%d#2;*;2;-;2", "2;!;2;||;2;==;2;||;2;==;2;==;00#2;*;2;-;2", "2;<;#2;*;2;-;2", "2;%;#2;*;2;-;2", "2;&;2;&;%d%d#0", "2;!;2;||;2;==;2;||;2;==;2;==;00#0", "2;<;#0", "2;%;#0", "2;*;2;-;2#0", "2;%;#0", "2;&;2;&;%d%d#2;*;2;-;2", "2;!;2;||;2;==;2;||;2;==;2;==;00#2;*;2;-;2", "2;<;#2;*;2;-;2", "2;%;#2;*;2;-;2", "2;*;2;-;2#2;*;2;-;2", "2;%;#2;*;2;-;2", "2;&;2;&;%d%d#2;*;2;-;2", "2;!;2;||;2;==;2;||;2;==;2;==;00#2;*;2;-;2", "2;<;#2;*;2;-;2", "2;%;#2;*;2;-;2", "2;*;2;-;2#2;*;2;-;2", "2;%;#2;*;2;-;2"], "controlContextBC": [":||", ":&&", ":!=", ":>=", ":>=", ":--", ":++", ":++", ":'\\n'", ":0", ":||", ":&&", ":!=", ":>=", ":>=", ":--", ":++", ":++", ":'\\n'", ":0", ":&", ":%d", ":<", ":0", "lp:++", "lp:&", "lp:&", "lp:%d%d", "lp:!", "lp:||", "lp:==", "lp:||", "lp:==", "lp:==", "lp:0", "lp:0", "lplp:<", "lplpif:==", "lplpif:0", "lplpif:%", "lplpifif:0", "lplpifif:*", "lplpifif:-", "lplpifif:2", "lplp:==", "lplp:0", "lplp:%", "lplpif:0", "lplpif:*", "lplpif:-", "lplpif:2", "lp:+", "lp:%lld\\n"]}]}