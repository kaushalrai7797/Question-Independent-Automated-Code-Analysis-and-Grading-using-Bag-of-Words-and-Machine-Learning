{"nodes": [{"string": " * _p -> _p ++ = _c", "links": [], "variables": ["_c", "_p", "__swbuf"], "ids": [], "nodeId": 0, "featuresSelf": ["icn", "return", "return"], "operators": ["||", "&&", "!=", ">=", ">=", "--", "++", "++"], "constants": ["'\\n'", "0"], "features": []}, {"string": "long;", "links": [], "variables": ["long"], "ids": [], "nodeId": 1, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "c;", "links": [], "variables": [], "ids": [], "nodeId": 2, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["T"], "ids": [], "nodeId": 3, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%lld\\n"], "features": []}, {"string": " i <= T", "links": [], "variables": ["T", "i"], "ids": [], "nodeId": 4, "featuresSelf": [], "operators": ["<="], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": [], "ids": [], "nodeId": 5, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " m = 0", "links": [], "variables": [], "ids": ["lp"], "nodeId": 7, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " j = 1", "links": [], "variables": [], "ids": ["lp"], "nodeId": 8, "featuresSelf": [], "operators": [], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 9, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["j"], "ids": ["lp", "lp"], "nodeId": 10, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["c"], "ids": ["lp", "lp"], "nodeId": 11, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%c"], "features": []}, {"string": " c == '\\n'", "links": [], "variables": ["c"], "ids": ["lp", "lp"], "nodeId": 12, "featuresSelf": ["icn", "break"], "operators": ["=="], "constants": ["'\\n'"], "features": []}, {"string": " c == 's'", "links": [], "variables": ["c"], "ids": ["lp", "lp"], "nodeId": 13, "featuresSelf": ["icn"], "operators": ["=="], "constants": ["'s'"], "features": []}, {"string": " s + 1", "links": [], "variables": ["s"], "ids": ["lp", "lp", "if"], "nodeId": 14, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": " d != ( j - 1 )", "links": [16, 17], "variables": [], "ids": ["lp", "lp", "if"], "nodeId": 15, "featuresSelf": ["icn"], "operators": ["&&", "!="], "constants": [], "features": []}, {"string": " j - 1", "links": [], "variables": ["j"], "ids": ["lp", "lp", "if"], "nodeId": 16, "featuresSelf": [], "operators": ["-"], "constants": ["1"], "features": []}, {"string": " j > 1", "links": [], "variables": ["d", "c1", "j"], "ids": ["lp", "lp", "if"], "nodeId": 17, "featuresSelf": [], "operators": ["&&", "==", ">"], "constants": ["'m'", "1"], "features": []}, {"string": " s - 1", "links": [], "variables": ["s"], "ids": ["lp", "lp", "if", "if"], "nodeId": 18, "featuresSelf": [], "operators": ["-"], "constants": ["1"], "features": []}, {"string": " j - 1", "links": [], "variables": ["j"], "ids": ["lp", "lp", "if", "if"], "nodeId": 19, "featuresSelf": [], "operators": ["-"], "constants": ["1"], "features": []}, {"string": " m + 1", "links": [], "variables": ["m"], "ids": ["lp", "lp"], "nodeId": 20, "featuresSelf": [], "operators": ["+"], "constants": ["1"], "features": []}, {"string": " j > 1", "links": [], "variables": ["j"], "ids": ["lp", "lp"], "nodeId": 21, "featuresSelf": ["icn"], "operators": [">"], "constants": ["1"], "features": []}, {"string": " c1 == 's'", "links": [], "variables": ["j", "d", "c1"], "ids": ["lp", "lp", "if"], "nodeId": 22, "featuresSelf": ["icn"], "operators": ["&&", "!=", "=="], "constants": ["'s'"], "features": []}, {"string": " s - 1", "links": [], "variables": ["s"], "ids": ["lp", "lp", "if", "if"], "nodeId": 23, "featuresSelf": [], "operators": ["-"], "constants": ["1"], "features": []}, {"string": " d = j", "links": [], "variables": ["j"], "ids": ["lp", "lp", "if", "if"], "nodeId": 24, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " c1 = c", "links": [], "variables": ["c"], "ids": ["lp", "lp"], "nodeId": 25, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " s > m", "links": [], "variables": ["m", "s"], "ids": ["lp"], "nodeId": 26, "featuresSelf": ["icn", "out", "icn", "out", "out"], "operators": ["==", ">"], "constants": ["tie\\n", "snakes\\n", "mongooses\\n"], "features": []}, {"string": " return 0", "links": [], "variables": [], "ids": [], "nodeId": 27, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", ":3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", ":", ":", ":1;&;%lld\\n", ":2;<=;1", ":", "lp:1;++;", "lp:0", "lp:1", "lp:", "lplp:1;++;", "lplp:1;&;%c", "lplp:1;==;'\\n'", "lplp:1;==;'s'", "lplpif:1;+;1", "lplpif:0;&&;0;!=;", "lplpif:1;-;1", "lplpif:3;&&;3;==;3;>;'m'1", "lplpifif:1;-;1", "lplpifif:1;-;1", "lplp:1;+;1", "lplp:1;>;1", "lplpif:3;&&;3;!=;3;==;'s'", "lplpifif:1;-;1", "lplpifif:", "lplp:", "lp:2;==;2;>;tie\\nsnakes\\nmongooses\\n", ":0"], "expr": ["3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", "3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", "", "", "1;&;%lld\\n", "2;<=;1", "", "1;++;", "0", "1", "", "1;++;", "1;&;%c", "1;==;'\\n'", "1;==;'s'", "1;+;1", "0;&&;0;!=;", "1;-;1", "3;&&;3;==;3;>;'m'1", "1;-;1", "1;-;1", "1;+;1", "1;>;1", "3;&&;3;!=;3;==;'s'", "1;-;1", "", "", "2;==;2;>;tie\\nsnakes\\nmongooses\\n", "0"], "basic": ["||", "&&", "!=", ">=", ">=", "--", "++", "++", "'\\n'", "0", "||", "&&", "!=", ">=", ">=", "--", "++", "++", "'\\n'", "0", "&", "%lld\\n", "<=", "1", "loop", "++", "0", "1", "loop", "++", "&", "%c", "==", "'\\n'", "==", "'s'", "+", "1", "&&", "!=", "-", "1", "&&", "==", ">", "'m'", "1", "-", "1", "-", "1", "+", "1", ">", "1", "&&", "!=", "==", "'s'", "-", "1", "==", ">", "tie\\n", "snakes\\n", "mongooses\\n", "0"], "exprDepend": ["1;+;1#1;-;1", "3;&&;3;==;3;>;'m'1#1;-;1", "1;+;1#1;-;1", "1;-;1#1;-;1", "3;&&;3;==;3;>;'m'1#", "3;&&;3;!=;3;==;'s'#", "3;&&;3;==;3;>;'m'1#", "3;&&;3;!=;3;==;'s'#"], "controlContextBC": [":||", ":&&", ":!=", ":>=", ":>=", ":--", ":++", ":++", ":'\\n'", ":0", ":||", ":&&", ":!=", ":>=", ":>=", ":--", ":++", ":++", ":'\\n'", ":0", ":&", ":%lld\\n", ":<=", ":1", "lp:++", "lp:0", "lp:1", "lplp:++", "lplp:&", "lplp:%c", "lplp:==", "lplp:'\\n'", "lplp:==", "lplp:'s'", "lplpif:+", "lplpif:1", "lplpif:&&", "lplpif:!=", "lplpif:-", "lplpif:1", "lplpif:&&", "lplpif:==", "lplpif:>", "lplpif:'m'", "lplpif:1", "lplpifif:-", "lplpifif:1", "lplpifif:-", "lplpifif:1", "lplp:+", "lplp:1", "lplp:>", "lplp:1", "lplpif:&&", "lplpif:!=", "lplpif:==", "lplpif:'s'", "lplpifif:-", "lplpifif:1", "lp:==", "lp:>", "lp:tie\\n", "lp:snakes\\n", "lp:mongooses\\n", ":0"]}]}