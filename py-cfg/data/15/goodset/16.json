{"nodes": [{"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "double v[100];", "links": [], "variables": ["v"], "ids": [], "nodeId": 1, "featuresSelf": [], "operators": [], "constants": ["100"], "features": []}, {"string": "int ary[100];", "links": [], "variables": ["ary"], "ids": [], "nodeId": 2, "featuresSelf": [], "operators": [], "constants": ["3", "100"], "features": []}, {"string": "for(scanf(\"%d\",&t)", "links": [], "variables": ["t"], "ids": [], "nodeId": 3, "featuresSelf": ["in"], "operators": ["&", "--"], "constants": ["%d"], "features": []}, {"string": null, "links": [], "variables": [], "ids": [], "nodeId": 4, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 5, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "h;", "links": [], "variables": ["h"], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": [], "constants": ["1.0", "0.0", "0.5"], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp"], "nodeId": 7, "featuresSelf": ["out"], "operators": [], "constants": ["\\n"], "features": []}, {"string": " j = 0", "links": [], "variables": [], "ids": ["lp"], "nodeId": 8, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": "scanf", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 9, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " i <= n", "links": [], "variables": ["n", "i"], "ids": ["lp"], "nodeId": 10, "featuresSelf": [], "operators": ["<="], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 11, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 12, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["ary", "i"], "ids": ["lp", "lp"], "nodeId": 13, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d", "0"], "features": []}, {"string": "Implicit Cast", "links": [], "variables": ["ary", "i"], "ids": ["lp", "lp"], "nodeId": 14, "featuresSelf": ["icn"], "operators": [], "constants": ["0"], "features": []}, {"string": "scanf", "links": [], "variables": ["ary", "i"], "ids": ["lp", "lp", "if"], "nodeId": 15, "featuresSelf": ["in"], "operators": ["&", "&"], "constants": ["%d%d", "1", "2"], "features": []}, {"string": " i = 80", "links": [], "variables": [], "ids": ["lp"], "nodeId": 16, "featuresSelf": [], "operators": [], "constants": ["80"], "features": []}, {"string": " while ( i -- )", "links": [], "variables": ["i"], "ids": ["lp"], "nodeId": 17, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": " ++ j <= n", "links": [], "variables": ["n", "j"], "ids": ["lp", "lp"], "nodeId": 18, "featuresSelf": ["cn", "loop"], "operators": ["<=", "++"], "constants": [], "features": []}, {"string": " ! ary [ j ] [ 0 ]", "links": [], "variables": ["ary", "j"], "ids": ["lp", "lp", "lp"], "nodeId": 19, "featuresSelf": ["icn"], "operators": ["!"], "constants": ["0"], "features": []}, {"string": " ary [ j ] [ 0 ] == 1", "links": [], "variables": ["m", "ary", "j"], "ids": ["lp", "lp", "lp", "if"], "nodeId": 20, "featuresSelf": ["icn"], "operators": ["=="], "constants": ["1", "0"], "features": []}, {"string": " 1 - ( 1 - v [ ary [ j ] [ 1 ] ] ) * ( 1 - v [ ary [ j ] [ 2 ] ] )", "links": [22, 25], "variables": [], "ids": ["lp", "lp", "lp", "if"], "nodeId": 21, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": " ( 1 - v [ ary [ j ] [ 1 ] ] ) * ( 1 - v [ ary [ j ] [ 2 ] ] )", "links": [23, 24], "variables": [], "ids": ["lp", "lp", "lp", "if"], "nodeId": 22, "featuresSelf": [], "operators": ["*"], "constants": [], "features": []}, {"string": " 1 - v [ ary [ j ] [ 2 ] ]", "links": [], "variables": ["v", "ary", "j"], "ids": ["lp", "lp", "lp", "if"], "nodeId": 23, "featuresSelf": [], "operators": ["-"], "constants": ["2", "1"], "features": []}, {"string": " 1 - v [ ary [ j ] [ 1 ] ]", "links": [], "variables": ["v", "ary", "j"], "ids": ["lp", "lp", "lp", "if"], "nodeId": 24, "featuresSelf": [], "operators": ["-"], "constants": ["1", "1"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp", "lp", "if"], "nodeId": 25, "featuresSelf": [], "operators": [], "constants": ["1"], "features": []}, {"string": " v [ ary [ j ] [ 1 ] ] * v [ ary [ j ] [ 2 ] ]", "links": [], "variables": ["v", "ary", "j"], "ids": ["lp", "lp", "lp"], "nodeId": 26, "featuresSelf": [], "operators": ["*"], "constants": ["2", "1"], "features": []}, {"string": " v [ n ] == .5", "links": [], "variables": ["v", "n"], "ids": ["lp", "lp"], "nodeId": 27, "featuresSelf": ["icn"], "operators": ["=="], "constants": ["0.5"], "features": []}, {"string": " v [ n ] < .5", "links": [], "variables": ["v", "n"], "ids": ["lp", "lp", "if"], "nodeId": 28, "featuresSelf": ["break", "icn"], "operators": ["<"], "constants": ["0.5"], "features": []}, {"string": " ( l + h ) / 2", "links": [30, 31], "variables": [], "ids": ["lp", "lp", "if"], "nodeId": 29, "featuresSelf": [], "operators": [",", "/"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp", "if"], "nodeId": 30, "featuresSelf": [], "operators": [], "constants": ["2"], "features": []}, {"string": " l = m", "links": [], "variables": ["h", "l", "m"], "ids": ["lp", "lp", "if"], "nodeId": 31, "featuresSelf": [], "operators": ["+"], "constants": [], "features": []}, {"string": " ( l + h ) / 2", "links": [33, 34], "variables": [], "ids": ["lp", "lp"], "nodeId": 32, "featuresSelf": [], "operators": [",", "/"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 33, "featuresSelf": [], "operators": [], "constants": ["2"], "features": []}, {"string": " h = m", "links": [], "variables": ["h", "l", "m"], "ids": ["lp", "lp"], "nodeId": 34, "featuresSelf": [], "operators": ["+"], "constants": [], "features": []}, {"string": " j = 0", "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 35, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": "printf", "links": [], "variables": ["m"], "ids": ["lp"], "nodeId": 36, "featuresSelf": ["out"], "operators": [], "constants": ["%.5lf\\n"], "features": []}, {"string": " return 0", "links": [], "variables": [], "ids": [], "nodeId": 37, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":", ":100", ":3100", ":1;&;1;--;%d", ":", "lp:", "lp:1.00.00.5", "lp:\\n", "lp:0", "lp:1;&;%d", "lp:2;<=;1", "lp:", "lplp:1;++;", "lplp:2;&;%d0", "lplp:0", "lplpif:2;&;2;&;%d%d12", "lp:80", "lp:1;--;", "lplp:2;<=;2;++;", "lplplp:2;!;0", "lplplpif:3;==;10", "lplplpif:0;-;", "lplplpif:0;*;", "lplplpif:3;-;21", "lplplpif:3;-;11", "lplplpif:1", "lplplp:3;*;21", "lplp:2;==;0.5", "lplpif:2;<;0.5", "lplpif:0;,;0;/;", "lplpif:2", "lplpif:3;+;", "lplp:0;,;0;/;", "lplp:2", "lplp:3;+;", "lplp:0", "lp:%.5lf\\n", ":0"], "expr": ["", "100", "3100", "1;&;1;--;%d", "", "", "1.00.00.5", "\\n", "0", "1;&;%d", "2;<=;1", "", "1;++;", "2;&;%d0", "0", "2;&;2;&;%d%d12", "80", "1;--;", "2;<=;2;++;", "2;!;0", "3;==;10", "0;-;", "0;*;", "3;-;21", "3;-;11", "1", "3;*;21", "2;==;0.5", "2;<;0.5", "0;,;0;/;", "2", "3;+;", "0;,;0;/;", "2", "3;+;", "0", "%.5lf\\n", "0"], "basic": ["100", "3", "100", "&", "--", "%d", "loop", "1.0", "0.0", "0.5", "\\n", "0", "&", "%d", "<=", "1", "loop", "++", "&", "%d", "0", "0", "&", "&", "%d%d", "1", "2", "80", "--", "loop", "<=", "++", "loop", "!", "0", "==", "1", "0", "-", "*", "-", "2", "1", "-", "1", "1", "1", "*", "2", "1", "==", "0.5", "<", "0.5", ",", "/", "2", "+", ",", "/", "2", "+", "0", "%.5lf\\n", "0"], "exprDepend": ["2;<=;1#80", "1;++;#80", "2;&;%d0#80", "0#80", "2;&;2;&;%d%d12#80", "100#3;==;10", "2;<=;2;++;#3;==;10", "2;!;0#3;==;10", "100#0;-;", "2;<=;2;++;#0;-;", "2;!;0#0;-;", "3;==;10#0;-;", "100#3;*;21", "3;-;21#3;*;21", "3;-;11#3;*;21", "2;<=;2;++;#3;*;21", "2;!;0#3;*;21", "3;==;10#3;*;21", "3;-;21#3;*;21", "3;-;11#3;*;21", "3;==;10#0;,;0;/;", "3;==;10#0;,;0;/;", "3;+;#0;,;0;/;", "1.00.00.5#3;+;", "3;+;#3;+;", "2;<=;2;++;#0", "2;!;0#0", "3;==;10#0", "3;-;21#0", "3;-;11#0", "3;*;21#0"], "controlContextBC": [":100", ":3", ":100", ":&", ":--", ":%d", "lp:1.0", "lp:0.0", "lp:0.5", "lp:\\n", "lp:0", "lp:&", "lp:%d", "lp:<=", "lp:1", "lplp:++", "lplp:&", "lplp:%d", "lplp:0", "lplp:0", "lplpif:&", "lplpif:&", "lplpif:%d%d", "lplpif:1", "lplpif:2", "lp:80", "lp:--", "lplp:<=", "lplp:++", "lplplp:!", "lplplp:0", "lplplpif:==", "lplplpif:1", "lplplpif:0", "lplplpif:-", "lplplpif:*", "lplplpif:-", "lplplpif:2", "lplplpif:1", "lplplpif:-", "lplplpif:1", "lplplpif:1", "lplplpif:1", "lplplp:*", "lplplp:2", "lplplp:1", "lplp:==", "lplp:0.5", "lplpif:<", "lplpif:0.5", "lplpif:,", "lplpif:/", "lplpif:2", "lplpif:+", "lplp:,", "lplp:/", "lplp:2", "lplp:+", "lplp:0", "lp:%.5lf\\n", ":0"]}]}