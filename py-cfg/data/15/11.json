{"nodes": [{"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 1, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " while ( t -- )", "links": [], "variables": ["t"], "ids": [], "nodeId": 2, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": [], "ids": ["lp"], "nodeId": 3, "featuresSelf": ["in"], "operators": [], "constants": ["\\n"], "features": []}, {"string": "n;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 4, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["n"], "ids": ["lp"], "nodeId": 5, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " n + 1", "links": [], "variables": ["input1", "n", "["], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": ["+", "+", "+"], "constants": ["1", "1", "1", "0"], "features": []}, {"string": " n + 1", "links": [], "variables": ["r1", "[", "n"], "ids": ["lp"], "nodeId": 7, "featuresSelf": [], "operators": ["+"], "constants": ["1.0", "0.0", "1"], "features": []}, {"string": " i <= n", "links": [], "variables": ["n", "i"], "ids": ["lp"], "nodeId": 8, "featuresSelf": [], "operators": ["<="], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 9, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 10, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["temp", "i"], "ids": ["lp", "lp"], "nodeId": 11, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": "Implicit Cast", "links": [], "variables": ["temp", "i", "input1", "input2"], "ids": ["lp", "lp"], "nodeId": 12, "featuresSelf": ["icn", "in"], "operators": ["&", "&"], "constants": ["%d%d"], "features": []}, {"string": " val [ i ] = 0", "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 13, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " val [ n ] != 0.5", "links": [], "variables": ["val", "n"], "ids": ["lp"], "nodeId": 14, "featuresSelf": ["cn", "loop"], "operators": ["!="], "constants": ["0.5"], "features": []}, {"string": " ( r1 + r2 ) / 2.0", "links": [16, 17], "variables": [], "ids": ["lp", "lp"], "nodeId": 15, "featuresSelf": [], "operators": ["/"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 16, "featuresSelf": [], "operators": [], "constants": ["2.0"], "features": []}, {"string": " r1 + r2", "links": [], "variables": ["r2", "r1"], "ids": ["lp", "lp"], "nodeId": 17, "featuresSelf": [], "operators": ["+"], "constants": [], "features": []}, {"string": " count ++", "links": [], "variables": ["count"], "ids": ["lp", "lp"], "nodeId": 18, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " j <= n", "links": [], "variables": ["n", "j"], "ids": ["lp", "lp"], "nodeId": 19, "featuresSelf": [], "operators": ["<="], "constants": ["1"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 20, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["j"], "ids": ["lp", "lp", "lp"], "nodeId": 21, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " val [ input1 [ j ] ] + ( 1 - val [ input1 [ j ] ] ) * val [ input2 [ j ] ]", "links": [23, 26], "variables": ["temp", "j", "res"], "ids": ["lp", "lp", "lp"], "nodeId": 22, "featuresSelf": ["icn", "icn"], "operators": ["==", "==", "+"], "constants": ["0", "1"], "features": []}, {"string": " ( 1 - val [ input1 [ j ] ] ) * val [ input2 [ j ] ]", "links": [24, 25], "variables": [], "ids": ["lp", "lp", "lp", "if"], "nodeId": 23, "featuresSelf": [], "operators": ["*"], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["val", "input2", "j"], "ids": ["lp", "lp", "lp", "if"], "nodeId": 24, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " 1 - val [ input1 [ j ] ]", "links": [], "variables": ["val", "input1", "j"], "ids": ["lp", "lp", "lp", "if"], "nodeId": 25, "featuresSelf": [], "operators": ["-"], "constants": ["1"], "features": []}, {"string": " val [ input1 [ j ] ] * val [ input2 [ j ] ]", "links": [], "variables": ["val", "input1", "j", "temp", "input2"], "ids": ["lp", "lp", "lp", "if"], "nodeId": 26, "featuresSelf": ["icn"], "operators": ["==", "*"], "constants": ["2"], "features": []}, {"string": " r2 = res", "links": [], "variables": ["val", "n", "res"], "ids": ["lp", "lp"], "nodeId": 27, "featuresSelf": ["icn", "icn"], "operators": [">", "<"], "constants": ["0.5", "0.5"], "features": []}, {"string": " count == 20", "links": [], "variables": ["count"], "ids": ["lp", "lp"], "nodeId": 28, "featuresSelf": ["icn", "break"], "operators": ["=="], "constants": ["20"], "features": []}, {"string": "printf", "links": [], "variables": ["res"], "ids": ["lp"], "nodeId": 29, "featuresSelf": ["out"], "operators": [], "constants": ["%0.5f\\n"], "features": []}], "features": [{"controlContextEC": [":", ":1;&;%d", ":1;--;", "lp:\\n", "lp:", "lp:1;&;%d", "lp:3;+;3;+;3;+;1110", "lp:3;+;1.00.01", "lp:2;<=;1", "lp:", "lplp:1;++;", "lplp:2;&;%d", "lplp:4;&;4;&;%d%d", "lplp:0", "lp:2;!=;0.5", "lplp:0;/;", "lplp:2.0", "lplp:2;+;", "lplp:1;++;", "lplp:2;<=;1", "lplp:", "lplplp:1;++;", "lplplp:3;==;3;==;3;+;01", "lplplpif:0;*;", "lplplpif:", "lplplpif:3;-;1", "lplplpif:5;==;5;*;2", "lplp:3;>;3;<;0.50.5", "lplp:1;==;20", "lp:%0.5f\\n"], "expr": ["", "1;&;%d", "1;--;", "\\n", "", "1;&;%d", "3;+;3;+;3;+;1110", "3;+;1.00.01", "2;<=;1", "", "1;++;", "2;&;%d", "4;&;4;&;%d%d", "0", "2;!=;0.5", "0;/;", "2.0", "2;+;", "1;++;", "2;<=;1", "", "1;++;", "3;==;3;==;3;+;01", "0;*;", "", "3;-;1", "5;==;5;*;2", "3;>;3;<;0.50.5", "1;==;20", "%0.5f\\n"], "basic": ["&", "%d", "--", "loop", "\\n", "&", "%d", "+", "+", "+", "1", "1", "1", "0", "+", "1.0", "0.0", "1", "<=", "1", "loop", "++", "&", "%d", "&", "&", "%d%d", "0", "!=", "0.5", "loop", "/", "2.0", "+", "++", "<=", "1", "loop", "++", "==", "==", "+", "0", "1", "*", "-", "1", "==", "*", "2", ">", "<", "0.5", "0.5", "==", "20", "%0.5f\\n"], "exprDepend": ["2;<=;1#0", "1;++;#0", "2;&;%d#0", "4;&;4;&;%d%d#0", "2;!=;0.5#3;==;3;==;3;+;01", "2;<=;1#3;==;3;==;3;+;01", "1;++;#3;==;3;==;3;+;01", "2;!=;0.5#5;==;5;*;2", "#5;==;5;*;2", "3;-;1#5;==;5;*;2", "2;<=;1#5;==;5;*;2", "1;++;#5;==;5;*;2", "3;==;3;==;3;+;01#5;==;5;*;2", "#5;==;5;*;2", "3;-;1#5;==;5;*;2", "3;+;1.00.01#3;>;3;<;0.50.5", "2;+;#3;>;3;<;0.50.5", "2;+;#3;>;3;<;0.50.5"], "controlContextBC": [":&", ":%d", ":--", "lp:\\n", "lp:&", "lp:%d", "lp:+", "lp:+", "lp:+", "lp:1", "lp:1", "lp:1", "lp:0", "lp:+", "lp:1.0", "lp:0.0", "lp:1", "lp:<=", "lp:1", "lplp:++", "lplp:&", "lplp:%d", "lplp:&", "lplp:&", "lplp:%d%d", "lplp:0", "lp:!=", "lp:0.5", "lplp:/", "lplp:2.0", "lplp:+", "lplp:++", "lplp:<=", "lplp:1", "lplplp:++", "lplplp:==", "lplplp:==", "lplplp:+", "lplplp:0", "lplplp:1", "lplplpif:*", "lplplpif:-", "lplplpif:1", "lplplpif:==", "lplplpif:*", "lplplpif:2", "lplp:>", "lplp:<", "lplp:0.5", "lplp:0.5", "lplp:==", "lplp:20", "lp:%0.5f\\n"]}]}