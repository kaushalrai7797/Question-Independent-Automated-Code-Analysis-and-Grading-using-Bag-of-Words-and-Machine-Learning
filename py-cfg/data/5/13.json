{"nodes": [{"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 1, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " while ( t -- )", "links": [], "variables": ["t"], "ids": [], "nodeId": 2, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": " c = 0", "links": [], "variables": [], "ids": ["lp"], "nodeId": 3, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": "scanf", "links": [], "variables": ["a", "b"], "ids": ["lp"], "nodeId": 4, "featuresSelf": ["in"], "operators": ["&", "&"], "constants": ["%d%d"], "features": []}, {"string": " i <= b", "links": [], "variables": ["a", "b", "i"], "ids": ["lp"], "nodeId": 5, "featuresSelf": [], "operators": ["<="], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 6, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 7, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " d = 1", "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 8, "featuresSelf": [], "operators": [], "constants": ["1"], "features": []}, {"string": " ( sqrt ( i ) - floor ( sqrt ( i ) ) ) == 0", "links": [10, 11], "variables": [], "ids": ["lp", "lp"], "nodeId": 9, "featuresSelf": ["icn"], "operators": ["=="], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp", "lp"], "nodeId": 10, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " sqrt ( i ) - floor ( sqrt ( i ) )", "links": [], "variables": ["i", "sqrt", "floor"], "ids": ["lp", "lp"], "nodeId": 11, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": " ii = i", "links": [], "variables": ["i"], "ids": ["lp", "lp", "if"], "nodeId": 12, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " ii != 0", "links": [], "variables": ["ii"], "ids": ["lp", "lp", "if"], "nodeId": 13, "featuresSelf": ["cn", "loop"], "operators": ["!="], "constants": ["0"], "features": []}, {"string": " ii % 10", "links": [], "variables": ["ii"], "ids": ["lp", "lp", "if", "lp"], "nodeId": 14, "featuresSelf": [], "operators": ["%"], "constants": ["10"], "features": []}, {"string": " rem != 0", "links": [], "variables": ["rem"], "ids": ["lp", "lp", "if", "lp"], "nodeId": 15, "featuresSelf": ["icn"], "operators": ["&&", "!=", "&&", "!=", "&&", "!=", "!="], "constants": ["9", "4", "1", "0"], "features": []}, {"string": " d = 0", "links": [], "variables": [], "ids": ["lp", "lp", "if", "lp", "if"], "nodeId": 16, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " break", "links": [], "variables": [], "ids": ["lp", "lp", "if", "lp", "if"], "nodeId": 17, "featuresSelf": ["break"], "operators": [], "constants": [], "features": []}, {"string": " ii / 10", "links": [], "variables": ["ii"], "ids": ["lp", "lp", "if", "lp"], "nodeId": 18, "featuresSelf": [], "operators": ["/"], "constants": ["10"], "features": []}, {"string": " d == 1", "links": [], "variables": ["d"], "ids": ["lp", "lp", "if"], "nodeId": 19, "featuresSelf": ["icn"], "operators": ["=="], "constants": ["1"], "features": []}, {"string": " c ++", "links": [], "variables": ["c"], "ids": ["lp", "lp", "if", "if"], "nodeId": 20, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": "printf", "links": [], "variables": ["c"], "ids": ["lp"], "nodeId": 21, "featuresSelf": ["out"], "operators": [], "constants": ["%d\\n"], "features": []}], "features": [{"controlContextEC": [":", ":1;&;%d", ":1;--;", "lp:0", "lp:2;&;2;&;%d%d", "lp:3;<=;", "lp:", "lplp:1;++;", "lplp:1", "lplp:0;==;", "lplp:0", "lplp:3;-;", "lplpif:", "lplpif:1;!=;0", "lplpiflp:1;%;10", "lplpiflp:1;&&;1;!=;1;&&;1;!=;1;&&;1;!=;1;!=;9410", "lplpiflpif:0", "lplpiflpif:", "lplpiflp:1;/;10", "lplpif:1;==;1", "lplpifif:1;++;", "lp:%d\\n"], "expr": ["", "1;&;%d", "1;--;", "0", "2;&;2;&;%d%d", "3;<=;", "", "1;++;", "1", "0;==;", "0", "3;-;", "", "1;!=;0", "1;%;10", "1;&&;1;!=;1;&&;1;!=;1;&&;1;!=;1;!=;9410", "0", "", "1;/;10", "1;==;1", "1;++;", "%d\\n"], "basic": ["&", "%d", "--", "loop", "0", "&", "&", "%d%d", "<=", "loop", "++", "1", "==", "0", "-", "!=", "0", "loop", "%", "10", "&&", "!=", "&&", "!=", "&&", "!=", "!=", "9", "4", "1", "0", "0", "/", "10", "==", "1", "++", "%d\\n"], "exprDepend": ["1;!=;0#1;/;10", "1;%;10#1;/;10"], "controlContextBC": [":&", ":%d", ":--", "lp:0", "lp:&", "lp:&", "lp:%d%d", "lp:<=", "lplp:++", "lplp:1", "lplp:==", "lplp:0", "lplp:-", "lplpif:!=", "lplpif:0", "lplpiflp:%", "lplpiflp:10", "lplpiflp:&&", "lplpiflp:!=", "lplpiflp:&&", "lplpiflp:!=", "lplpiflp:&&", "lplpiflp:!=", "lplpiflp:!=", "lplpiflp:9", "lplpiflp:4", "lplpiflp:1", "lplpiflp:0", "lplpiflpif:0", "lplpiflp:/", "lplpiflp:10", "lplpif:==", "lplpif:1", "lplpifif:++", "lp:%d\\n"]}]}