{"nodes": [{"string": "compute", "links": [], "variables": ["compute"], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "i;", "links": [], "variables": [], "ids": [], "nodeId": 1, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "long;", "links": [], "variables": ["long"], "ids": [], "nodeId": 2, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 3, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " while ( t -- )", "links": [], "variables": ["t"], "ids": [], "nodeId": 4, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": " ans = 0", "links": [], "variables": [], "ids": ["lp"], "nodeId": 5, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": "scanf", "links": [], "variables": ["a"], "ids": ["lp"], "nodeId": 6, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%lld"], "features": []}, {"string": "scanf", "links": [], "variables": ["b"], "ids": ["lp"], "nodeId": 7, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%lld"], "features": []}, {"string": " i < count", "links": [], "variables": ["count", "i"], "ids": ["lp"], "nodeId": 8, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 9, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 10, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " arr [ i ] >= a", "links": [], "variables": ["b", "arr", "i", "a", "ans"], "ids": ["lp", "lp"], "nodeId": 11, "featuresSelf": ["icn"], "operators": ["&&", "<=", ">=", "++"], "constants": [], "features": []}, {"string": "printf", "links": [], "variables": ["ans"], "ids": ["lp"], "nodeId": 12, "featuresSelf": ["out"], "operators": [], "constants": ["%d"], "features": []}, {"string": "Implicit Cast", "links": [], "variables": ["t"], "ids": ["lp"], "nodeId": 13, "featuresSelf": ["icn", "out"], "operators": [], "constants": ["\\n"], "features": []}, {"string": " return 0", "links": [], "variables": [], "ids": [], "nodeId": 14, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":", ":", ":", ":1;&;%d", ":1;--;", "lp:0", "lp:1;&;%lld", "lp:1;&;%lld", "lp:2;<;0", "lp:", "lplp:1;++;", "lplp:5;&&;5;<=;5;>=;5;++;", "lp:%d", "lp:\\n", ":0"], "expr": ["", "", "", "1;&;%d", "1;--;", "0", "1;&;%lld", "1;&;%lld", "2;<;0", "", "1;++;", "5;&&;5;<=;5;>=;5;++;", "%d", "\\n", "0"], "basic": ["&", "%d", "--", "loop", "0", "&", "%lld", "&", "%lld", "<", "0", "loop", "++", "&&", "<=", ">=", "++", "%d", "\\n", "0"], "exprDepend": [], "controlContextBC": [":&", ":%d", ":--", "lp:0", "lp:&", "lp:%lld", "lp:&", "lp:%lld", "lp:<", "lp:0", "lplp:++", "lplp:&&", "lplp:<=", "lplp:>=", "lplp:++", "lp:%d", "lp:\\n", ":0"]}]}