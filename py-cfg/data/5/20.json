{"nodes": [{"string": "T;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["T"], "ids": [], "nodeId": 1, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " while ( T -- )", "links": [], "variables": ["T"], "ids": [], "nodeId": 2, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "a;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 3, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "lint arr[103];", "links": [], "variables": ["arr"], "ids": ["lp"], "nodeId": 4, "featuresSelf": [], "operators": [], "constants": ["103"], "features": []}, {"string": "scanf", "links": [], "variables": ["a", "b"], "ids": ["lp"], "nodeId": 5, "featuresSelf": ["in"], "operators": ["&", "&"], "constants": ["%lld%lld"], "features": []}, {"string": "i;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": [], "constants": ["0", "0", "0"], "features": []}, {"string": " i <= 100000", "links": [], "variables": ["i"], "ids": ["lp"], "nodeId": 7, "featuresSelf": [], "operators": ["<="], "constants": ["0", "100000"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 8, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 9, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " i * i", "links": [], "variables": ["i", "check"], "ids": ["lp", "lp"], "nodeId": 10, "featuresSelf": ["icn"], "operators": ["*"], "constants": [], "features": []}, {"string": " i * i", "links": [], "variables": ["i"], "ids": ["lp", "lp", "if"], "nodeId": 11, "featuresSelf": [], "operators": ["*"], "constants": [], "features": []}, {"string": " j ++", "links": [], "variables": ["j"], "ids": ["lp", "lp", "if"], "nodeId": 12, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " k < 103", "links": [], "variables": ["k"], "ids": ["lp"], "nodeId": 13, "featuresSelf": [], "operators": ["<"], "constants": ["0", "103"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 14, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["k"], "ids": ["lp", "lp"], "nodeId": 15, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " arr [ k ] >= a", "links": [], "variables": ["b", "arr", "k", "a", "ans"], "ids": ["lp", "lp"], "nodeId": 16, "featuresSelf": ["icn"], "operators": ["&&", "<=", ">=", "++"], "constants": [], "features": []}, {"string": "printf", "links": [], "variables": ["ans"], "ids": ["lp"], "nodeId": 17, "featuresSelf": ["out"], "operators": [], "constants": ["%d\\n"], "features": []}, {"string": " return 0", "links": [], "variables": [], "ids": [], "nodeId": 18, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":", ":1;&;%d", ":1;--;", "lp:", "lp:103", "lp:2;&;2;&;%lld%lld", "lp:000", "lp:1;<=;0100000", "lp:", "lplp:1;++;", "lplp:2;*;", "lplpif:1;*;", "lplpif:1;++;", "lp:1;<;0103", "lp:", "lplp:1;++;", "lplp:5;&&;5;<=;5;>=;5;++;", "lp:%d\\n", ":0"], "expr": ["", "1;&;%d", "1;--;", "", "103", "2;&;2;&;%lld%lld", "000", "1;<=;0100000", "", "1;++;", "2;*;", "1;*;", "1;++;", "1;<;0103", "", "1;++;", "5;&&;5;<=;5;>=;5;++;", "%d\\n", "0"], "basic": ["&", "%d", "--", "loop", "103", "&", "&", "%lld%lld", "0", "0", "0", "<=", "0", "100000", "loop", "++", "*", "*", "++", "<", "0", "103", "loop", "++", "&&", "<=", ">=", "++", "%d\\n", "0"], "exprDepend": ["103#1;*;"], "controlContextBC": [":&", ":%d", ":--", "lp:103", "lp:&", "lp:&", "lp:%lld%lld", "lp:0", "lp:0", "lp:0", "lp:<=", "lp:0", "lp:100000", "lplp:++", "lplp:*", "lplpif:*", "lplpif:++", "lp:<", "lp:0", "lp:103", "lplp:++", "lplp:&&", "lplp:<=", "lplp:>=", "lplp:++", "lp:%d\\n", ":0"]}]}