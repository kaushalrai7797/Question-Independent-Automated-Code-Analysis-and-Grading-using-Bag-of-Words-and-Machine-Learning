{"nodes": [{"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 1, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " while ( t -- )", "links": [], "variables": ["t"], "ids": [], "nodeId": 2, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "i;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 3, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": "scanf", "links": [], "variables": ["A"], "ids": ["lp"], "nodeId": 4, "featuresSelf": ["in"], "operators": [], "constants": ["%s"], "features": []}, {"string": " l = strlen ( A )", "links": [], "variables": ["A", "strlen"], "ids": ["lp"], "nodeId": 5, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " i <= j", "links": [], "variables": ["l", "j", "i"], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": [",", "-", "<="], "constants": ["1", "0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 7, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["j"], "ids": ["lp", "lp"], "nodeId": 8, "featuresSelf": [], "operators": ["--"], "constants": [], "features": []}, {"string": " A [ i ] == '<'", "links": [], "variables": ["A", "j", "i"], "ids": ["lp", "lp"], "nodeId": 9, "featuresSelf": ["icn"], "operators": ["&&", "==", "=="], "constants": ["'>'", "'<'"], "features": []}, {"string": " c + 2", "links": [], "variables": ["c"], "ids": ["lp", "lp", "if"], "nodeId": 10, "featuresSelf": [], "operators": ["+"], "constants": ["2"], "features": []}, {"string": " A [ i ] == '<'", "links": [], "variables": ["i", "A", "j"], "ids": ["lp", "lp", "if"], "nodeId": 11, "featuresSelf": ["icn"], "operators": ["++", "&&", "==", "=="], "constants": ["'<'", "'<'"], "features": []}, {"string": " c = 0", "links": [], "variables": [], "ids": ["lp", "lp", "if"], "nodeId": 12, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": " i = 0", "links": [], "variables": [], "ids": ["lp", "lp", "if"], "nodeId": 13, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": "printf", "links": [], "variables": ["c"], "ids": ["lp"], "nodeId": 14, "featuresSelf": ["out"], "operators": [], "constants": ["%d\\n"], "features": []}, {"string": " return 0", "links": [], "variables": [], "ids": [], "nodeId": 15, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":", ":1;&;%d", ":1;--;", "lp:0", "lp:%s", "lp:", "lp:3;,;3;-;3;<=;10", "lp:", "lplp:1;--;", "lplp:3;&&;3;==;3;==;'>''<'", "lplpif:1;+;2", "lplpif:3;++;3;&&;3;==;3;==;'<''<'", "lplpif:0", "lplpif:0", "lp:%d\\n", ":0"], "expr": ["", "1;&;%d", "1;--;", "0", "%s", "", "3;,;3;-;3;<=;10", "", "1;--;", "3;&&;3;==;3;==;'>''<'", "1;+;2", "3;++;3;&&;3;==;3;==;'<''<'", "0", "0", "%d\\n", "0"], "basic": ["&", "%d", "--", "loop", "0", "%s", ",", "-", "<=", "1", "0", "loop", "--", "&&", "==", "==", "'>'", "'<'", "+", "2", "++", "&&", "==", "==", "'<'", "'<'", "0", "0", "%d\\n", "0"], "exprDepend": ["1;+;2#0", "3;,;3;-;3;<=;10#0", "3;&&;3;==;3;==;'>''<'#0", "3;++;3;&&;3;==;3;==;'<''<'#0"], "controlContextBC": [":&", ":%d", ":--", "lp:0", "lp:%s", "lp:,", "lp:-", "lp:<=", "lp:1", "lp:0", "lplp:--", "lplp:&&", "lplp:==", "lplp:==", "lplp:'>'", "lplp:'<'", "lplpif:+", "lplpif:2", "lplpif:++", "lplpif:&&", "lplpif:==", "lplpif:==", "lplpif:'<'", "lplpif:'<'", "lplpif:0", "lplpif:0", "lp:%d\\n", ":0"]}]}