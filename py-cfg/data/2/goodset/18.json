{"nodes": [{"string": "n;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["n"], "ids": [], "nodeId": 1, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " n -- > 0", "links": [], "variables": ["n"], "ids": [], "nodeId": 2, "featuresSelf": ["cn", "loop"], "operators": [">", "--"], "constants": ["0"], "features": []}, {"string": "char a[5000001];", "links": [], "variables": ["a"], "ids": ["lp"], "nodeId": 3, "featuresSelf": [], "operators": [], "constants": ["5000001"], "features": []}, {"string": "scanf", "links": [], "variables": ["a"], "ids": ["lp"], "nodeId": 4, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%s"], "features": []}, {"string": "long;", "links": [], "variables": ["long", "a", "strlen"], "ids": ["lp"], "nodeId": 5, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "long;", "links": [], "variables": ["long"], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "long;", "links": [], "variables": ["long"], "ids": ["lp"], "nodeId": 7, "featuresSelf": [], "operators": [], "constants": ["0"], "features": []}, {"string": "long;", "links": [], "variables": ["long"], "ids": ["lp"], "nodeId": 8, "featuresSelf": [], "operators": [], "constants": ["0", "0"], "features": []}, {"string": " i < len", "links": [], "variables": ["i", "len"], "ids": ["lp"], "nodeId": 9, "featuresSelf": [], "operators": ["<"], "constants": ["0"], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 10, "featuresSelf": ["cn"], "operators": [], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["i"], "ids": ["lp", "lp"], "nodeId": 11, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " e ++", "links": [], "variables": ["e"], "ids": ["lp", "lp"], "nodeId": 12, "featuresSelf": [], "operators": ["++"], "constants": [], "features": []}, {"string": " a [ i ] == '<'", "links": [], "variables": ["a", "i"], "ids": ["lp", "lp"], "nodeId": 13, "featuresSelf": ["icn"], "operators": ["=="], "constants": ["'<'"], "features": []}, {"string": " a [ i ] == '>'", "links": [], "variables": ["s", "a", "i"], "ids": ["lp", "lp", "if"], "nodeId": 14, "featuresSelf": ["icn"], "operators": ["++", "=="], "constants": ["'>'"], "features": []}, {"string": " s --", "links": [], "variables": ["s"], "ids": ["lp", "lp", "if"], "nodeId": 15, "featuresSelf": [], "operators": ["--"], "constants": [], "features": []}, {"string": " s < 0", "links": [], "variables": ["s"], "ids": ["lp", "lp"], "nodeId": 16, "featuresSelf": ["icn", "break"], "operators": ["<"], "constants": ["0"], "features": []}, {"string": " s == 0", "links": [], "variables": ["s"], "ids": ["lp", "lp"], "nodeId": 17, "featuresSelf": ["icn"], "operators": ["=="], "constants": ["0"], "features": []}, {"string": " count = e", "links": [], "variables": ["e"], "ids": ["lp", "lp", "if"], "nodeId": 18, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "printf", "links": [], "variables": ["count"], "ids": ["lp"], "nodeId": 19, "featuresSelf": ["out"], "operators": [], "constants": ["%d\\n"], "features": []}, {"string": " return 0", "links": [], "variables": [], "ids": [], "nodeId": 20, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":", ":1;&;%d", ":1;>;1;--;0", "lp:5000001", "lp:1;&;%s", "lp:", "lp:", "lp:0", "lp:00", "lp:2;<;0", "lp:", "lplp:1;++;", "lplp:1;++;", "lplp:2;==;'<'", "lplpif:3;++;3;==;'>'", "lplpif:1;--;", "lplp:1;<;0", "lplp:1;==;0", "lplpif:", "lp:%d\\n", ":0"], "expr": ["", "1;&;%d", "1;>;1;--;0", "5000001", "1;&;%s", "", "", "0", "00", "2;<;0", "", "1;++;", "1;++;", "2;==;'<'", "3;++;3;==;'>'", "1;--;", "1;<;0", "1;==;0", "", "%d\\n", "0"], "basic": ["&", "%d", ">", "--", "0", "loop", "5000001", "&", "%s", "0", "0", "0", "<", "0", "loop", "++", "++", "==", "'<'", "++", "==", "'>'", "--", "<", "0", "==", "0", "%d\\n", "0"], "exprDepend": [], "controlContextBC": [":&", ":%d", ":>", ":--", ":0", "lp:5000001", "lp:&", "lp:%s", "lp:0", "lp:0", "lp:0", "lp:<", "lp:0", "lplp:++", "lplp:++", "lplp:==", "lplp:'<'", "lplpif:++", "lplpif:==", "lplpif:'>'", "lplpif:--", "lplp:<", "lplp:0", "lplp:==", "lplp:0", "lp:%d\\n", ":0"]}]}