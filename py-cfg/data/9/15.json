{"nodes": [{"string": "i;", "links": [], "variables": [], "ids": [], "nodeId": 0, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["i"], "ids": [], "nodeId": 1, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " while ( i -- )", "links": [], "variables": ["i"], "ids": [], "nodeId": 2, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "S;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 3, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "O;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 4, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["S", "SG", "FG", "D", "T"], "ids": ["lp"], "nodeId": 5, "featuresSelf": ["in"], "operators": ["&", "&", "&", "&", "&"], "constants": ["%f%f%f%f%f"], "features": []}, {"string": " ( 180 * D ) / T", "links": [7, 8], "variables": [], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": ["/"], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["T"], "ids": ["lp"], "nodeId": 7, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " 180 * D", "links": [], "variables": ["D"], "ids": ["lp"], "nodeId": 8, "featuresSelf": [], "operators": ["*"], "constants": ["180"], "features": []}, {"string": " S + O", "links": [], "variables": ["O", "S"], "ids": ["lp"], "nodeId": 9, "featuresSelf": [], "operators": ["+"], "constants": [], "features": []}, {"string": " abs ( SG - R ) < abs ( FG - R )", "links": [11, 12], "variables": [], "ids": ["lp"], "nodeId": 10, "featuresSelf": ["icn"], "operators": ["<"], "constants": [], "features": []}, {"string": " FG - R", "links": [], "variables": ["R", "FG", "abs"], "ids": ["lp"], "nodeId": 11, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": " SG - R", "links": [], "variables": ["R", "SG", "abs"], "ids": ["lp"], "nodeId": 12, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": " abs ( SG - R ) > abs ( FG - R )", "links": [14, 15], "variables": [], "ids": ["lp", "if"], "nodeId": 13, "featuresSelf": ["out", "icn"], "operators": [">"], "constants": ["SEBI\\n"], "features": []}, {"string": " FG - R", "links": [], "variables": ["R", "FG", "abs"], "ids": ["lp"], "nodeId": 14, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": " SG - R", "links": [], "variables": ["R", "SG", "abs"], "ids": ["lp"], "nodeId": 15, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 16, "featuresSelf": ["out"], "operators": [], "constants": ["FATHER\\n"], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp"], "nodeId": 17, "featuresSelf": ["out"], "operators": [], "constants": ["DRAW\\n"], "features": []}, {"string": " return 0", "links": [], "variables": [], "ids": [], "nodeId": 18, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":", ":1;&;%d", ":1;--;", "lp:", "lp:", "lp:5;&;5;&;5;&;5;&;5;&;%f%f%f%f%f", "lp:0;/;", "lp:", "lp:1;*;180", "lp:2;+;", "lp:0;<;", "lp:3;-;", "lp:3;-;", "lpif:0;>;SEBI\\n", "lp:3;-;", "lp:3;-;", "lpif:FATHER\\n", "lp:DRAW\\n", ":0"], "expr": ["", "1;&;%d", "1;--;", "", "", "5;&;5;&;5;&;5;&;5;&;%f%f%f%f%f", "0;/;", "", "1;*;180", "2;+;", "0;<;", "3;-;", "3;-;", "0;>;SEBI\\n", "3;-;", "3;-;", "FATHER\\n", "DRAW\\n", "0"], "basic": ["&", "%d", "--", "loop", "&", "&", "&", "&", "&", "%f%f%f%f%f", "/", "*", "180", "+", "<", "-", "-", ">", "SEBI\\n", "-", "-", "FATHER\\n", "DRAW\\n", "0"], "exprDepend": [], "controlContextBC": [":&", ":%d", ":--", "lp:&", "lp:&", "lp:&", "lp:&", "lp:&", "lp:%f%f%f%f%f", "lp:/", "lp:*", "lp:180", "lp:+", "lp:<", "lp:-", "lp:-", "lpif:>", "lpif:SEBI\\n", "lp:-", "lp:-", "lpif:FATHER\\n", "lp:DRAW\\n", ":0"]}]}