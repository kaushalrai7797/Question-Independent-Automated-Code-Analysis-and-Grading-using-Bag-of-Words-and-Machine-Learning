{"nodes": [{"string": " * _p -> _p ++ = _c", "links": [], "variables": ["_c", "_p", "__swbuf"], "ids": [], "nodeId": 0, "featuresSelf": ["icn", "return", "return"], "operators": ["||", "&&", "!=", ">=", ">=", "--", "++", "++"], "constants": ["'\\n'", "0"], "features": []}, {"string": "t;", "links": [], "variables": [], "ids": [], "nodeId": 1, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["t"], "ids": [], "nodeId": 2, "featuresSelf": ["in"], "operators": ["&"], "constants": ["%d"], "features": []}, {"string": " while ( t -- )", "links": [], "variables": ["t"], "ids": [], "nodeId": 3, "featuresSelf": ["cn", "loop"], "operators": ["--"], "constants": [], "features": []}, {"string": "s;", "links": [], "variables": [], "ids": ["lp"], "nodeId": 4, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": "scanf", "links": [], "variables": ["s", "sg", "fg", "d", "t1"], "ids": ["lp"], "nodeId": 5, "featuresSelf": ["in"], "operators": ["&", "&", "&", "&", "&"], "constants": ["%lf%lf%lf%lf%lf"], "features": []}, {"string": " s + ( ( d * 50 ) / t1 ) * 18 / 5", "links": [7, 14], "variables": ["sp"], "ids": ["lp"], "nodeId": 6, "featuresSelf": [], "operators": ["+"], "constants": [], "features": []}, {"string": " ( ( d * 50 ) / t1 ) * 18 / 5", "links": [8, 9], "variables": [], "ids": ["lp"], "nodeId": 7, "featuresSelf": [], "operators": ["/"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 8, "featuresSelf": [], "operators": [], "constants": ["5"], "features": []}, {"string": " ( ( d * 50 ) / t1 ) * 18", "links": [10, 11], "variables": [], "ids": ["lp"], "nodeId": 9, "featuresSelf": [], "operators": ["*"], "constants": [], "features": []}, {"string": null, "links": [], "variables": [], "ids": ["lp"], "nodeId": 10, "featuresSelf": [], "operators": [], "constants": ["18"], "features": []}, {"string": " ( d * 50 ) / t1", "links": [12, 13], "variables": [], "ids": ["lp"], "nodeId": 11, "featuresSelf": [], "operators": ["/"], "constants": [], "features": []}, {"string": null, "links": [], "variables": ["t1"], "ids": ["lp"], "nodeId": 12, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " d * 50", "links": [], "variables": ["d"], "ids": ["lp"], "nodeId": 13, "featuresSelf": [], "operators": ["*"], "constants": ["50"], "features": []}, {"string": null, "links": [], "variables": ["s"], "ids": ["lp"], "nodeId": 14, "featuresSelf": [], "operators": [], "constants": [], "features": []}, {"string": " sg - sp", "links": [], "variables": ["d1", "sp", "sg"], "ids": ["lp"], "nodeId": 15, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": " fg - sp", "links": [], "variables": ["d2", "sp", "fg"], "ids": ["lp"], "nodeId": 16, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": " d1 < 0", "links": [], "variables": ["d1"], "ids": ["lp"], "nodeId": 17, "featuresSelf": ["icn"], "operators": ["<"], "constants": ["0"], "features": []}, {"string": " d1 = - d1", "links": [], "variables": ["d1"], "ids": ["lp", "if"], "nodeId": 18, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": " d2 < 0", "links": [], "variables": ["d2"], "ids": ["lp"], "nodeId": 19, "featuresSelf": ["icn"], "operators": ["<"], "constants": ["0"], "features": []}, {"string": " d2 = - d2", "links": [], "variables": ["d2"], "ids": ["lp", "if"], "nodeId": 20, "featuresSelf": [], "operators": ["-"], "constants": [], "features": []}, {"string": " d1 > d2", "links": [], "variables": ["d2", "d1"], "ids": ["lp"], "nodeId": 21, "featuresSelf": ["icn"], "operators": [">"], "constants": [], "features": []}, {"string": " d2 > d1", "links": [], "variables": ["d1", "d2"], "ids": ["lp", "if"], "nodeId": 22, "featuresSelf": ["out", "icn"], "operators": [">"], "constants": ["FATHER\\n"], "features": []}, {"string": " d1 == d2", "links": [], "variables": ["d2", "d1"], "ids": ["lp", "if"], "nodeId": 23, "featuresSelf": ["out", "icn"], "operators": ["=="], "constants": ["SEBI\\n"], "features": []}, {"string": "printf", "links": [], "variables": [], "ids": ["lp", "if"], "nodeId": 24, "featuresSelf": ["out"], "operators": [], "constants": ["DRAW\\n"], "features": []}, {"string": " return 0", "links": [], "variables": [], "ids": [], "nodeId": 25, "featuresSelf": ["return"], "operators": [], "constants": ["0"], "features": []}], "features": [{"controlContextEC": [":3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", ":3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", ":", ":1;&;%d", ":1;--;", "lp:", "lp:5;&;5;&;5;&;5;&;5;&;%lf%lf%lf%lf%lf", "lp:1;+;", "lp:0;/;", "lp:5", "lp:0;*;", "lp:18", "lp:0;/;", "lp:", "lp:1;*;50", "lp:", "lp:3;-;", "lp:3;-;", "lp:1;<;0", "lpif:1;-;", "lp:1;<;0", "lpif:1;-;", "lp:2;>;", "lpif:2;>;FATHER\\n", "lpif:2;==;SEBI\\n", "lpif:DRAW\\n", ":0"], "expr": ["3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", "3;||;3;&&;3;!=;3;>=;3;>=;3;--;3;++;3;++;'\\n'0", "", "1;&;%d", "1;--;", "", "5;&;5;&;5;&;5;&;5;&;%lf%lf%lf%lf%lf", "1;+;", "0;/;", "5", "0;*;", "18", "0;/;", "", "1;*;50", "", "3;-;", "3;-;", "1;<;0", "1;-;", "1;<;0", "1;-;", "2;>;", "2;>;FATHER\\n", "2;==;SEBI\\n", "DRAW\\n", "0"], "basic": ["||", "&&", "!=", ">=", ">=", "--", "++", "++", "'\\n'", "0", "||", "&&", "!=", ">=", ">=", "--", "++", "++", "'\\n'", "0", "&", "%d", "--", "loop", "&", "&", "&", "&", "&", "%lf%lf%lf%lf%lf", "+", "/", "5", "*", "18", "/", "*", "50", "-", "-", "<", "0", "-", "<", "0", "-", ">", ">", "FATHER\\n", "==", "SEBI\\n", "DRAW\\n", "0"], "exprDepend": ["3;-;#1;-;", "1;<;0#1;-;", "3;-;#1;-;", "1;<;0#1;-;"], "controlContextBC": [":||", ":&&", ":!=", ":>=", ":>=", ":--", ":++", ":++", ":'\\n'", ":0", ":||", ":&&", ":!=", ":>=", ":>=", ":--", ":++", ":++", ":'\\n'", ":0", ":&", ":%d", ":--", "lp:&", "lp:&", "lp:&", "lp:&", "lp:&", "lp:%lf%lf%lf%lf%lf", "lp:+", "lp:/", "lp:5", "lp:*", "lp:18", "lp:/", "lp:*", "lp:50", "lp:-", "lp:-", "lp:<", "lp:0", "lpif:-", "lp:<", "lp:0", "lpif:-", "lp:>", "lpif:>", "lpif:FATHER\\n", "lpif:==", "lpif:SEBI\\n", "lpif:DRAW\\n", ":0"]}]}